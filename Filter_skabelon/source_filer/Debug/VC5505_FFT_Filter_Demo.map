******************************************************************************
              TMS320C55x Linker PC v4.3.8                      
******************************************************************************
>> Linked Thu Apr 16 13:14:37 2020

OUTPUT FILE NAME:   <VC5505_FFT_Filter_Demo.out>
ENTRY POINT SYMBOL: "reset_isr"  address: 0001211c


MEMORY CONFIGURATION

         name            origin    length      used     unused   attr    fill
                        (bytes)   (bytes)    (bytes)   (bytes)
----------------------  --------  ---------  --------  --------  ----  --------
  MMR                   00000000   000000c0  00000000  000000c0  RW  
  DARAM_0               000000c0   00001f40  000009d0  00001570  RW  
  DARAM_1               00002000   00002000  00002000  00000000  RW  
  DARAM_2               00004000   00002000  00002000  00000000  RW  
  DARAM_3               00006000   00002000  00002000  00000000  RW  
  DARAM_4               00008000   00002000  00002000  00000000  RW  
  DARAM_5               0000a000   00002000  000017f8  00000808  RW  
  DARAM_6               0000c000   00002000  00001010  00000ff0  RW  
  DARAM_7               0000e000   00002000  00001010  00000ff0  RW  
  SARAM                 00010000   00040000  00006eb8  00039148  RW  
  EMIF_CS0              00050000   007b0000  00000000  007b0000  RW  
  EMIF_CS2              00800000   00400000  00000000  00400000  RW  
  EMIF_CS3              00c00000   00200000  00000000  00200000  RW  
  EMIF_CS4              00e00000   00100000  00000000  00100000  RW  
  EMIF_CS5              00f00000   000e0000  00000000  000e0000  RW  
  SAROM_0               00fe0000   00008000  00000000  00008000  R  X
  SAROM_1               00fe8000   00008000  00000000  00008000  R  X
  SAROM_2               00ff0000   00008000  00000000  00008000  R  X
  SAROM_3               00ff8000   00007f00  00000000  00007f00  R  X
  VECS                  00ffff00   00000100  00000000  00000100  R  X


SECTION ALLOCATION MAP
(Addresses surrounded by []'s are displayed for convenience only!)

output                                                          attributes/
section   page  orgn(bytes) orgn(words) len(bytes) len(words)   input sections
--------  ----  ----------- ----------- ---------- ----------   --------------
.stack       0   [ 000000c0 ]  00000060          *   000001f4   UNINITIALIZED
                 [ 000000c0 ]  00000060          *   000001f4   --HOLE--

.sysstack 
*            0   [ 000004a8 ]  00000254          *   000001f4   UNINITIALIZED
                 [ 000004a8 ]  00000254          *   000001f4   --HOLE--

vector       0     00000900  [ 00000480 ] 00000100          *   
                   00000900  [ 00000480 ] 00000100          *   vector.obj (vector)

vectors      0     00000a00  [ 00000500 ] 00000100          *   NOLOAD SECTION
                   00000a00  [ 00000500 ] 00000100          *   rts55h.lib : vectors.obj (vectors)

data_br_buf 
*            0   [ 00002000 ]  00001000          *   00000800   UNINITIALIZED
                 [ 00002000 ]  00001000          *   00000800   configuration.obj (data_br_buf)

scratch_buf 
*            0   [ 00003000 ]  00001800          *   00000800   UNINITIALIZED
                 [ 00003000 ]  00001800          *   00000800   configuration.obj (scratch_buf)

coeffs_fft_buf 
*            0   [ 00004000 ]  00002000          *   00000800   UNINITIALIZED
                 [ 00004000 ]  00002000          *   00000800   configuration.obj (coeffs_fft_buf)

convolved_buf 
*            0   [ 00005000 ]  00002800          *   00000800   UNINITIALIZED
                 [ 00005000 ]  00002800          *   00000800   configuration.obj (convolved_buf)

RcvL1        0   [ 00006000 ]  00003000          *   00000800   UNINITIALIZED
                 [ 00006000 ]  00003000          *   00000800   configuration.obj (RcvL1)

RcvL2        0   [ 00007000 ]  00003800          *   00000800   UNINITIALIZED
                 [ 00007000 ]  00003800          *   00000800   configuration.obj (RcvL2)

RcvR1        0   [ 00008000 ]  00004000          *   00000800   UNINITIALIZED
                 [ 00008000 ]  00004000          *   00000800   configuration.obj (RcvR1)

RcvR2        0   [ 00009000 ]  00004800          *   00000800   UNINITIALIZED
                 [ 00009000 ]  00004800          *   00000800   configuration.obj (RcvR2)

FilterOut 
*            0   [ 0000a000 ]  00005000          *   00000800   UNINITIALIZED
                 [ 0000a000 ]  00005000          *   00000800   configuration.obj (FilterOut)

OverlapL     0   [ 0000b000 ]  00005800          *   000001fe   UNINITIALIZED
                 [ 0000b000 ]  00005800          *   000001fe   configuration.obj (OverlapL)

OverlapR     0   [ 0000b3fc ]  000059fe          *   000001fe   UNINITIALIZED
                 [ 0000b3fc ]  000059fe          *   000001fe   configuration.obj (OverlapR)

XmitL1       0   [ 0000c000 ]  00006000          *   00000404   UNINITIALIZED
                 [ 0000c000 ]  00006000          *   00000404   configuration.obj (XmitL1)

XmitL2       0   [ 0000c808 ]  00006404          *   00000404   UNINITIALIZED
                 [ 0000c808 ]  00006404          *   00000404   configuration.obj (XmitL2)

XmitR1       0   [ 0000e000 ]  00007000          *   00000404   UNINITIALIZED
                 [ 0000e000 ]  00007000          *   00000404   configuration.obj (XmitR1)

XmitR2       0   [ 0000e808 ]  00007404          *   00000404   UNINITIALIZED
                 [ 0000e808 ]  00007404          *   00000404   configuration.obj (XmitR2)

.text        0     00010000  [ 00008000 ] 0000230c          *   
                   00010000  [ 00008000 ] 00000fe7          *   hwafft.obj (.text)
                   00010fe7  [ 000087f3+] 00000493          *   filter_routines.obj (.text)
                   0001147a  [ 00008a3d ] 00000492          *   dma_routines.obj (.text)
                   0001190c  [ 00008c86 ] 000002ef          *   codec_routines.obj (.text)
                   00011bfb  [ 00008dfd+] 00000298          *   i2s_register.obj (.text)
                   00011e93  [ 00008f49+] 00000131          *   main.obj (.text)
                   00011fc4  [ 00008fe2 ] 000000dc          *   rtc_routines.obj (.text)
                   000120a0  [ 00009050 ] 0000007b          *   55xdsph_r3.lib : fir2.obj (.text)
                   0001211b  [ 0000908d ] 00000001          *   --HOLE-- [fill = 20]
                   0001211c  [ 0000908e ] 0000007b          *   vector.obj (.text)
                   00012197  [ 000090cb+] 00000051          *   i2s_routines.obj (.text)
                   000121e8  [ 000090f4 ] 0000004d          *   rts55h.lib : autoinit.obj (.text)
                   00012235  [ 0000911a+] 00000049          *              : args_main.obj (.text)
                   0001227e  [ 0000913f ] 0000003e          *              : exit.obj (.text)
                   000122bc  [ 0000915e ] 00000034          *              : boot.obj (.text)
                   000122f0  [ 00009178 ] 00000012          *              : _lock.obj (.text)
                   00012302  [ 00009181 ] 00000007          *              : exit.obj (.text:CIO_breakpoint)
                   00012309  [ 00009184+] 00000002          *              : vectors.obj (.text)
                   0001230b  [ 00009185 ] 00000001          *   --HOLE-- [fill = 20]

RcvL1_copy 
*            0   [ 0001230c ]  00009186          *   00000800   UNINITIALIZED
                 [ 0001230c ]  00009186          *   00000800   configuration.obj (RcvL1_copy)

RcvL2_copy 
*            0   [ 0001330c ]  00009986          *   00000800   UNINITIALIZED
                 [ 0001330c ]  00009986          *   00000800   configuration.obj (RcvL2_copy)

RcvR1_copy 
*            0   [ 0001430c ]  0000a186          *   00000800   UNINITIALIZED
                 [ 0001430c ]  0000a186          *   00000800   configuration.obj (RcvR1_copy)

RcvR2_copy 
*            0   [ 0001530c ]  0000a986          *   00000800   UNINITIALIZED
                 [ 0001530c ]  0000a986          *   00000800   configuration.obj (RcvR2_copy)

.cinit       0   [ 0001630c ]  0000b186          *   000002fe   
                 [ 0001630c ]  0000b186          *   00000286   configuration.obj (.cinit)
                 [ 00016818 ]  0000b40c          *   00000042   main.obj (.cinit)
                 [ 0001689c ]  0000b44e          *   00000018   dma_routines.obj (.cinit)
                 [ 000168cc ]  0000b466          *   0000000a   rts55h.lib : _lock.obj (.cinit)
                 [ 000168e0 ]  0000b470          *   0000000a              : exit.obj (.cinit)
                 [ 000168f4 ]  0000b47a          *   00000005   filter_routines.obj (.cinit)
                 [ 000168fe ]  0000b47f          *   00000004   rtc_routines.obj (.cinit)
                 [ 00016906 ]  0000b483          *   00000001   --HOLE-- [fill = 0]

.bss         0   [ 00016908 ]  0000b484          *   000002d8   UNINITIALIZED
                 [ 00016908 ]  0000b484          *   0000025f   configuration.obj (.bss)
                 [ 00016dc6 ]  0000b6e3          *   00000058   main.obj (.bss)
                 [ 00016e76 ]  0000b73b          *   00000001   rtc_routines.obj (.bss)
                 [ 00016e78 ]  0000b73c          *   00000016   dma_routines.obj (.bss)
                 [ 00016ea4 ]  0000b752          *   00000004   rts55h.lib : _lock.obj (.bss)
                 [ 00016eac ]  0000b756          *   00000004              : exit.obj (.bss)
                 [ 00016eb4 ]  0000b75a          *   00000002   filter_routines.obj (.bss)


GLOBAL SYMBOLS: SORTED ALPHABETICALLY BY Name 

abs. value/
byte addr   word addr   name
---------   ---------   ----
00000002                $TI_capability$C5500$CallingConvention
00000008                $TI_capability$C5500$MemoryModel
00000001                $TI_capability_requires_rev3
            0000b484    .bss
00010000                .text
00012303                C$$EXIT
0001190c                _AIC3204_init
000112c3                _COLA_Output
00011392                _CPLX_Mul
000110b6                _Clear_COLA_Overlaps
00011f5c                _ConfigPort
            0000b73b    _Count_RTC
            0000b74c    _CurrentRxL_DMAChannel
            0000b74d    _CurrentRxR_DMAChannel
            0000b74e    _CurrentTxL_DMAChannel
            0000b74f    _CurrentTxR_DMAChannel
00011757                _DMA_Isr
000110fd                _FFT_Coeffs
000111cf                _FFT_Filter
            00005000    _FilterOut
            0000b75a    _Hwafft_Func
00011ef6                _InitSystem
            00005800    _OverlapL
            000059fe    _OverlapR
00011ec4                _PLL_98MHz
00000900                _RST
0001201e                _RTC_Isr
            00003000    _RcvL1
            00009186    _RcvL1_copy
            00003800    _RcvL2
            00009986    _RcvL2_copy
            00004000    _RcvR1
            0000a186    _RcvR1_copy
            00004800    _RcvR2
            0000a986    _RcvR2_copy
00000a00                _Reset
            0000b750    _RunFilterForL
            0000b751    _RunFilterForR
            0000b73c    _RxL1_DMA_address
            0000b73e    _RxL2_DMA_address
            0000b740    _RxR1_DMA_address
            0000b742    _RxR2_DMA_address
00011f86                _SYS_GlobalIntDisable
00011f82                _SYS_GlobalIntEnable
            0000b683    _Simulation
            0000b744    _TxL1_DMA_address
            0000b746    _TxL2_DMA_address
            0000b748    _TxR1_DMA_address
            0000b74a    _TxR2_DMA_address
            00006000    _XmitL1
            00006404    _XmitL2
            00007000    _XmitR1
            00007404    _XmitR2
00010fe7                _Zero_Pad_Inputs
            00000254    __STACK_END
000003e8                __STACK_SIZE
000003e8                __SYSSTACK_SIZE
ffffffff                ___binit__
            0000b484    ___bss__
ffffffff                ___c_args__
            0000b186    ___cinit__
            0000b75c    ___end__
0001230c                ___etext__
ffffffff                ___pinit__
00010000                ___text__
00012235                __args_main
            0000b756    __cleanup_ptr
            0000b758    __dtors_ptr
            0000b752    __lock
00012300                __nop
000122f8                __register_lock
000122f0                __register_unlock
            00000060    __stack
            00000254    __sysstack
            0000b754    __unlock
00012302                _abort
000121e8                _auto_init
000113fa                _buff_copy16
00011433                _buff_copy32
000122bc                _c_int00
            0000b6e5    _clearOverlaps
            0000b484    _coeffs
            00002000    _coeffs_fft_buf
            00002800    _convolved_buf
            00001000    _data_br_buf
            0000b70f    _data_buffer
00011e5b                _disable_i2s0
00011e69                _disable_i2s1
00011e77                _disable_i2s2
00011e85                _disable_i2s3
0001174a                _enable_dma_int
00011e23                _enable_i2s0
00011e31                _enable_i2s1
00011e3f                _enable_i2s2
00011e4d                _enable_i2s3
00011fc4                _enable_rtc_second_int
0001227e                _exit
            0000b6e4    _fBypassOn
            0000b6e3    _fFilterOn
            0000b707    _filter_coef
000120a0                _fir2
00010d80                _hwafft_1024pts
000106f7                _hwafft_128pts
00010103                _hwafft_16pts
00010908                _hwafft_256pts
00010259                _hwafft_32pts
00010b06                _hwafft_512pts
00010562                _hwafft_64pts
00010014                _hwafft_8pts
00010000                _hwafft_br
00011bfb                _i2s0_read_CR
00011c43                _i2s0_read_INTR
00011c49                _i2s0_read_INT_MASK
00011c55                _i2s0_read_RXL_LSW
00011c61                _i2s0_read_RXL_MSW
00011c6d                _i2s0_read_RXR_LSW
00011c79                _i2s0_read_RXR_MSW
00011c07                _i2s0_read_SRGR
00011c13                _i2s0_read_TXL_LSW
00011c1f                _i2s0_read_TXL_MSW
00011c2b                _i2s0_read_TXR_LSW
00011c37                _i2s0_read_TXR_MSW
00011c01                _i2s0_write_CR
00011c4f                _i2s0_write_INT_MASK
00011c5b                _i2s0_write_RXL_LSW
00011c67                _i2s0_write_RXL_MSW
00011c73                _i2s0_write_RXR_LSW
00011c7f                _i2s0_write_RXR_MSW
00011c0d                _i2s0_write_SRGR
00011c19                _i2s0_write_TXL_LSW
00011c25                _i2s0_write_TXL_MSW
00011c31                _i2s0_write_TXR_LSW
00011c3d                _i2s0_write_TXR_MSW
00011c85                _i2s1_read_CR
00011ccd                _i2s1_read_INTR
00011cd3                _i2s1_read_INT_MASK
00011cdf                _i2s1_read_RXL_LSW
00011ceb                _i2s1_read_RXL_MSW
00011cf7                _i2s1_read_RXR_LSW
00011d03                _i2s1_read_RXR_MSW
00011c91                _i2s1_read_SRGR
00011c9d                _i2s1_read_TXL_LSW
00011ca9                _i2s1_read_TXL_MSW
00011cb5                _i2s1_read_TXR_LSW
00011cc1                _i2s1_read_TXR_MSW
00011c8b                _i2s1_write_CR
00011cd9                _i2s1_write_INT_MASK
00011ce5                _i2s1_write_RXL_LSW
00011cf1                _i2s1_write_RXL_MSW
00011cfd                _i2s1_write_RXR_LSW
00011d09                _i2s1_write_RXR_MSW
00011c97                _i2s1_write_SRGR
00011ca3                _i2s1_write_TXL_LSW
00011caf                _i2s1_write_TXL_MSW
00011cbb                _i2s1_write_TXR_LSW
00011cc7                _i2s1_write_TXR_MSW
00011d0f                _i2s2_read_CR
00011d57                _i2s2_read_INTR
00011d5d                _i2s2_read_INT_MASK
00011d69                _i2s2_read_RXL_LSW
00011d75                _i2s2_read_RXL_MSW
00011d81                _i2s2_read_RXR_LSW
00011d8d                _i2s2_read_RXR_MSW
00011d1b                _i2s2_read_SRGR
00011d27                _i2s2_read_TXL_LSW
00011d33                _i2s2_read_TXL_MSW
00011d3f                _i2s2_read_TXR_LSW
00011d4b                _i2s2_read_TXR_MSW
00011d15                _i2s2_write_CR
00011d63                _i2s2_write_INT_MASK
00011d6f                _i2s2_write_RXL_LSW
00011d7b                _i2s2_write_RXL_MSW
00011d87                _i2s2_write_RXR_LSW
00011d93                _i2s2_write_RXR_MSW
00011d21                _i2s2_write_SRGR
00011d2d                _i2s2_write_TXL_LSW
00011d39                _i2s2_write_TXL_MSW
00011d45                _i2s2_write_TXR_LSW
00011d51                _i2s2_write_TXR_MSW
00011d99                _i2s3_read_CR
00011de1                _i2s3_read_INTR
00011de7                _i2s3_read_INT_MASK
00011df3                _i2s3_read_RXL_LSW
00011dff                _i2s3_read_RXL_MSW
00011e0b                _i2s3_read_RXR_LSW
00011e17                _i2s3_read_RXR_MSW
00011da5                _i2s3_read_SRGR
00011db1                _i2s3_read_TXL_LSW
00011dbd                _i2s3_read_TXL_MSW
00011dc9                _i2s3_read_TXR_LSW
00011dd5                _i2s3_read_TXR_MSW
00011d9f                _i2s3_write_CR
00011ded                _i2s3_write_INT_MASK
00011df9                _i2s3_write_RXL_LSW
00011e05                _i2s3_write_RXL_MSW
00011e11                _i2s3_write_RXR_LSW
00011e1d                _i2s3_write_RXR_MSW
00011dab                _i2s3_write_SRGR
00011db7                _i2s3_write_TXL_LSW
00011dc3                _i2s3_write_TXL_MSW
00011dcf                _i2s3_write_TXR_LSW
00011ddb                _i2s3_write_TXR_MSW
            0000b6e7    _input_signal
            0000b73a    _length_coef
            0000b739    _length_data
00011e93                _main
            0000b6e6    _ovfler_flag
00011fd0                _reset_RTC
            0000b719    _result_array
            00001800    _scratch_buf
0001147a                _setDMA_address
000115da                _set_dma0_ch0_i2s0_Lout
00011582                _set_dma0_ch0_stop
00011636                _set_dma0_ch1_i2s0_Rout
00011598                _set_dma0_ch1_stop
00011692                _set_dma0_ch2_i2s0_Lin
000115ae                _set_dma0_ch2_stop
000116ee                _set_dma0_ch3_i2s0_Rin
000115c4                _set_dma0_ch3_stop
00012197                _set_i2s0_master
000121c8                _set_i2s0_slave
00011fa7                _turnOffLED
00011f8a                _turnOnLED
ffffffff                binit
            0000b186    cinit
            0000b75c    end
0001230c                etext
ffffffff                pinit
0001211c                reset_isr


GLOBAL SYMBOLS: SORTED BY Symbol Address 

abs. value/
byte addr   word addr   name
---------   ---------   ----
00000001                $TI_capability_requires_rev3
00000002                $TI_capability$C5500$CallingConvention
00000008                $TI_capability$C5500$MemoryModel
            00000060    __stack
000003e8                __STACK_SIZE
000003e8                __SYSSTACK_SIZE
            00000254    __STACK_END
            00000254    __sysstack
00000900                _RST
00000a00                _Reset
            00001000    _data_br_buf
            00001800    _scratch_buf
            00002000    _coeffs_fft_buf
            00002800    _convolved_buf
            00003000    _RcvL1
            00003800    _RcvL2
            00004000    _RcvR1
            00004800    _RcvR2
            00005000    _FilterOut
            00005800    _OverlapL
            000059fe    _OverlapR
            00006000    _XmitL1
            00006404    _XmitL2
            00007000    _XmitR1
            00007404    _XmitR2
00010000                .text
00010000                ___text__
00010000                _hwafft_br
00010014                _hwafft_8pts
00010103                _hwafft_16pts
00010259                _hwafft_32pts
00010562                _hwafft_64pts
000106f7                _hwafft_128pts
00010908                _hwafft_256pts
00010b06                _hwafft_512pts
00010d80                _hwafft_1024pts
00010fe7                _Zero_Pad_Inputs
000110b6                _Clear_COLA_Overlaps
000110fd                _FFT_Coeffs
000111cf                _FFT_Filter
000112c3                _COLA_Output
00011392                _CPLX_Mul
000113fa                _buff_copy16
00011433                _buff_copy32
0001147a                _setDMA_address
00011582                _set_dma0_ch0_stop
00011598                _set_dma0_ch1_stop
000115ae                _set_dma0_ch2_stop
000115c4                _set_dma0_ch3_stop
000115da                _set_dma0_ch0_i2s0_Lout
00011636                _set_dma0_ch1_i2s0_Rout
00011692                _set_dma0_ch2_i2s0_Lin
000116ee                _set_dma0_ch3_i2s0_Rin
0001174a                _enable_dma_int
00011757                _DMA_Isr
0001190c                _AIC3204_init
00011bfb                _i2s0_read_CR
00011c01                _i2s0_write_CR
00011c07                _i2s0_read_SRGR
00011c0d                _i2s0_write_SRGR
00011c13                _i2s0_read_TXL_LSW
00011c19                _i2s0_write_TXL_LSW
00011c1f                _i2s0_read_TXL_MSW
00011c25                _i2s0_write_TXL_MSW
00011c2b                _i2s0_read_TXR_LSW
00011c31                _i2s0_write_TXR_LSW
00011c37                _i2s0_read_TXR_MSW
00011c3d                _i2s0_write_TXR_MSW
00011c43                _i2s0_read_INTR
00011c49                _i2s0_read_INT_MASK
00011c4f                _i2s0_write_INT_MASK
00011c55                _i2s0_read_RXL_LSW
00011c5b                _i2s0_write_RXL_LSW
00011c61                _i2s0_read_RXL_MSW
00011c67                _i2s0_write_RXL_MSW
00011c6d                _i2s0_read_RXR_LSW
00011c73                _i2s0_write_RXR_LSW
00011c79                _i2s0_read_RXR_MSW
00011c7f                _i2s0_write_RXR_MSW
00011c85                _i2s1_read_CR
00011c8b                _i2s1_write_CR
00011c91                _i2s1_read_SRGR
00011c97                _i2s1_write_SRGR
00011c9d                _i2s1_read_TXL_LSW
00011ca3                _i2s1_write_TXL_LSW
00011ca9                _i2s1_read_TXL_MSW
00011caf                _i2s1_write_TXL_MSW
00011cb5                _i2s1_read_TXR_LSW
00011cbb                _i2s1_write_TXR_LSW
00011cc1                _i2s1_read_TXR_MSW
00011cc7                _i2s1_write_TXR_MSW
00011ccd                _i2s1_read_INTR
00011cd3                _i2s1_read_INT_MASK
00011cd9                _i2s1_write_INT_MASK
00011cdf                _i2s1_read_RXL_LSW
00011ce5                _i2s1_write_RXL_LSW
00011ceb                _i2s1_read_RXL_MSW
00011cf1                _i2s1_write_RXL_MSW
00011cf7                _i2s1_read_RXR_LSW
00011cfd                _i2s1_write_RXR_LSW
00011d03                _i2s1_read_RXR_MSW
00011d09                _i2s1_write_RXR_MSW
00011d0f                _i2s2_read_CR
00011d15                _i2s2_write_CR
00011d1b                _i2s2_read_SRGR
00011d21                _i2s2_write_SRGR
00011d27                _i2s2_read_TXL_LSW
00011d2d                _i2s2_write_TXL_LSW
00011d33                _i2s2_read_TXL_MSW
00011d39                _i2s2_write_TXL_MSW
00011d3f                _i2s2_read_TXR_LSW
00011d45                _i2s2_write_TXR_LSW
00011d4b                _i2s2_read_TXR_MSW
00011d51                _i2s2_write_TXR_MSW
00011d57                _i2s2_read_INTR
00011d5d                _i2s2_read_INT_MASK
00011d63                _i2s2_write_INT_MASK
00011d69                _i2s2_read_RXL_LSW
00011d6f                _i2s2_write_RXL_LSW
00011d75                _i2s2_read_RXL_MSW
00011d7b                _i2s2_write_RXL_MSW
00011d81                _i2s2_read_RXR_LSW
00011d87                _i2s2_write_RXR_LSW
00011d8d                _i2s2_read_RXR_MSW
00011d93                _i2s2_write_RXR_MSW
00011d99                _i2s3_read_CR
00011d9f                _i2s3_write_CR
00011da5                _i2s3_read_SRGR
00011dab                _i2s3_write_SRGR
00011db1                _i2s3_read_TXL_LSW
00011db7                _i2s3_write_TXL_LSW
00011dbd                _i2s3_read_TXL_MSW
00011dc3                _i2s3_write_TXL_MSW
00011dc9                _i2s3_read_TXR_LSW
00011dcf                _i2s3_write_TXR_LSW
00011dd5                _i2s3_read_TXR_MSW
00011ddb                _i2s3_write_TXR_MSW
00011de1                _i2s3_read_INTR
00011de7                _i2s3_read_INT_MASK
00011ded                _i2s3_write_INT_MASK
00011df3                _i2s3_read_RXL_LSW
00011df9                _i2s3_write_RXL_LSW
00011dff                _i2s3_read_RXL_MSW
00011e05                _i2s3_write_RXL_MSW
00011e0b                _i2s3_read_RXR_LSW
00011e11                _i2s3_write_RXR_LSW
00011e17                _i2s3_read_RXR_MSW
00011e1d                _i2s3_write_RXR_MSW
00011e23                _enable_i2s0
00011e31                _enable_i2s1
00011e3f                _enable_i2s2
00011e4d                _enable_i2s3
00011e5b                _disable_i2s0
00011e69                _disable_i2s1
00011e77                _disable_i2s2
00011e85                _disable_i2s3
00011e93                _main
00011ec4                _PLL_98MHz
00011ef6                _InitSystem
00011f5c                _ConfigPort
00011f82                _SYS_GlobalIntEnable
00011f86                _SYS_GlobalIntDisable
00011f8a                _turnOnLED
00011fa7                _turnOffLED
00011fc4                _enable_rtc_second_int
00011fd0                _reset_RTC
0001201e                _RTC_Isr
000120a0                _fir2
0001211c                reset_isr
00012197                _set_i2s0_master
000121c8                _set_i2s0_slave
000121e8                _auto_init
00012235                __args_main
0001227e                _exit
000122bc                _c_int00
000122f0                __register_unlock
000122f8                __register_lock
00012300                __nop
00012302                _abort
00012303                C$$EXIT
            00009186    _RcvL1_copy
0001230c                ___etext__
0001230c                etext
            00009986    _RcvL2_copy
            0000a186    _RcvR1_copy
            0000a986    _RcvR2_copy
            0000b186    ___cinit__
            0000b186    cinit
            0000b484    .bss
            0000b484    ___bss__
            0000b484    _coeffs
            0000b683    _Simulation
            0000b6e3    _fFilterOn
            0000b6e4    _fBypassOn
            0000b6e5    _clearOverlaps
            0000b6e6    _ovfler_flag
            0000b6e7    _input_signal
            0000b707    _filter_coef
            0000b70f    _data_buffer
            0000b719    _result_array
            0000b739    _length_data
            0000b73a    _length_coef
            0000b73b    _Count_RTC
            0000b73c    _RxL1_DMA_address
            0000b73e    _RxL2_DMA_address
            0000b740    _RxR1_DMA_address
            0000b742    _RxR2_DMA_address
            0000b744    _TxL1_DMA_address
            0000b746    _TxL2_DMA_address
            0000b748    _TxR1_DMA_address
            0000b74a    _TxR2_DMA_address
            0000b74c    _CurrentRxL_DMAChannel
            0000b74d    _CurrentRxR_DMAChannel
            0000b74e    _CurrentTxL_DMAChannel
            0000b74f    _CurrentTxR_DMAChannel
            0000b750    _RunFilterForL
            0000b751    _RunFilterForR
            0000b752    __lock
            0000b754    __unlock
            0000b756    __cleanup_ptr
            0000b758    __dtors_ptr
            0000b75a    _Hwafft_Func
            0000b75c    ___end__
            0000b75c    end
ffffffff                ___binit__
ffffffff                ___c_args__
ffffffff                ___pinit__
ffffffff                binit
ffffffff                pinit

[229 symbols]
