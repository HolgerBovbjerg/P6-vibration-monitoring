******************************************************************************
              TMS320C55x Linker PC v4.3.8                      
******************************************************************************
>> Linked Wed May 06 08:29:28 2020

OUTPUT FILE NAME:   <VC5505_FFT_Filter_Demo.out>
ENTRY POINT SYMBOL: "reset_isr"  address: 00016d8c


MEMORY CONFIGURATION

         name            origin    length      used     unused   attr    fill
                        (bytes)   (bytes)    (bytes)   (bytes)
----------------------  --------  ---------  --------  --------  ----  --------
  MMR                   00000000   000000c0  00000000  000000c0  RW  
  DARAM_0               000000c0   00001f40  00001eb4  0000008c  RW  
  DARAM_1               00002000   00002000  00002000  00000000  RW  
  DARAM_2               00004000   00002000  00002000  00000000  RW  
  DARAM_3               00006000   00002000  00002000  00000000  RW  
  DARAM_4               00008000   00002000  00002000  00000000  RW  
  DARAM_5               0000a000   00002000  000017f8  00000808  RW  
  DARAM_6               0000c000   00002000  00001010  00000ff0  RW  
  DARAM_7               0000e000   00002000  00001010  00000ff0  RW  
  SARAM                 00010000   00020000  0000dac4  0001253c  RW  
  SARAM_2               00030000   0001c000  00000000  0001c000  RW  
  SARAM_3               0004c000   00001000  00000000  00001000  RWIX
  SARAM_4               0004d000   00001000  00000000  00001000  RWIX
  SARAM_5               0004e000   00001000  00000000  00001000  RW  
  SARAM_6               0004f000   00001000  00000000  00001000  RW  
  EMIF_CS0              00050000   007b0000  00000000  007b0000  RW  
  EMIF_CS2              00800000   00400000  00000000  00400000  RW  
  EMIF_CS3              00c00000   00200000  00000000  00200000  RW  
  EMIF_CS4              00e00000   00100000  00000000  00100000  RW  
  EMIF_CS5              00f00000   000e0000  00000000  000e0000  RW  
  SAROM_0               00fe0000   00008000  00000000  00008000  R  X
  SAROM_1               00fe8000   00008000  00000000  00008000  R  X
  SAROM_2               00ff0000   00008000  00000000  00008000  R  X
  SAROM_3               00ff8000   00007f00  00000000  00007f00  R  X
  VECS                  00ffff00   00000100  00000000  00000100  R  X


SECTION ALLOCATION MAP
(Addresses surrounded by []'s are displayed for convenience only!)

output                                                          attributes/
section   page  orgn(bytes) orgn(words) len(bytes) len(words)   input sections
--------  ----  ----------- ----------- ---------- ----------   --------------
.stack       0   [ 000000c0 ]  00000060          *   000001f4   UNINITIALIZED
                 [ 000000c0 ]  00000060          *   000001f4   --HOLE--

.sysstack 
*            0   [ 000004a8 ]  00000254          *   000001f4   UNINITIALIZED
                 [ 000004a8 ]  00000254          *   000001f4   --HOLE--

vector       0     00000900  [ 00000480 ] 00000100          *   
                   00000900  [ 00000480 ] 00000100          *   vector.obj (vector)

.const       0   [ 00000a00 ]  00000500          *   0000056a   
                 [ 00000a00 ]  00000500          *   00000236   pll.obj (.const:.string)
                 [ 00000e6c ]  00000736          *   00000174   aic3204_init.obj (.const:.string)
                 [ 00001154 ]  000008aa          *   00000101   rts55h.lib : ctype.obj (.const:__ctypes_)
                 [ 00001356 ]  000009ab          *   00000001   main.obj (.const)
                 [ 00001358 ]  000009ac          *   00000055   MMA8451.obj (.const:.string)
                 [ 00001402 ]  00000a01          *   00000001   --HOLE-- [fill = 0]
                 [ 00001404 ]  00000a02          *   00000024   rts55h.lib : _printfi.obj (.const:.string)
                 [ 0000144c ]  00000a26          *   0000001b   main.obj (.const:.string)
                 [ 00001482 ]  00000a41          *   00000001   --HOLE-- [fill = 0]
                 [ 00001484 ]  00000a42          *   0000000c   rts55h.lib : _printfi.obj (.const)
                 [ 0000149c ]  00000a4e          *   00000008              : divd.obj (.const:_initial_approx$1)
                 [ 000014ac ]  00000a56          *   00000002              : fputs.obj (.const:.string)
                 [ 000014b0 ]  00000a58          *   00000002   MMA8451.obj (.const:_$P$T0$1)
                 [ 000014b4 ]  00000a5a          *   00000002   MMA8451.obj (.const:_$P$T1$2)
                 [ 000014b8 ]  00000a5c          *   00000002   MMA8451.obj (.const:_$P$T2$3)
                 [ 000014bc ]  00000a5e          *   00000002   MMA8451.obj (.const:_$P$T3$4)
                 [ 000014c0 ]  00000a60          *   00000002   MMA8451.obj (.const:_$P$T4$5)
                 [ 000014c4 ]  00000a62          *   00000002   MMA8451.obj (.const:_$P$T5$6)
                 [ 000014c8 ]  00000a64          *   00000002   MMA8451.obj (.const:_$P$T6$7)
                 [ 000014cc ]  00000a66          *   00000002   rts55h.lib : divd.obj (.const)
                 [ 000014d0 ]  00000a68          *   00000002              : fltlid.obj (.const)

.sysmem      0   [ 000014d4 ]  00000a6a          *   000003e8   UNINITIALIZED
                 [ 000014d4 ]  00000a6a          *   000003e8   --HOLE--

.cio         0   [ 00001ca8 ]  00000e54          *   00000120   UNINITIALIZED
                 [ 00001ca8 ]  00000e54          *   00000120   rts55h.lib : trgmsg.obj (.cio)

vectors      0     00001ee8  [ 00000f74 ] 00000100          *   NOLOAD SECTION
                   00001ee8  [ 00000f74 ] 00000100          *   rts55h.lib : vectors.obj (vectors)

data_br_buf 
*            0   [ 00002000 ]  00001000          *   00000800   UNINITIALIZED
                 [ 00002000 ]  00001000          *   00000800   main.obj (data_br_buf)

scratch_buf 
*            0   [ 00003000 ]  00001800          *   00000800   UNINITIALIZED
                 [ 00003000 ]  00001800          *   00000800   main.obj (scratch_buf)

coeffs_fft_buf 
*            0   [ 00004000 ]  00002000          *   00000800   UNINITIALIZED
                 [ 00004000 ]  00002000          *   00000800   configuration.obj (coeffs_fft_buf)

convolved_buf 
*            0   [ 00005000 ]  00002800          *   00000800   UNINITIALIZED
                 [ 00005000 ]  00002800          *   00000800   configuration.obj (convolved_buf)

RcvL1        0   [ 00006000 ]  00003000          *   00000800   UNINITIALIZED
                 [ 00006000 ]  00003000          *   00000800   configuration.obj (RcvL1)

RcvL2        0   [ 00007000 ]  00003800          *   00000800   UNINITIALIZED
                 [ 00007000 ]  00003800          *   00000800   configuration.obj (RcvL2)

RcvR1        0   [ 00008000 ]  00004000          *   00000800   UNINITIALIZED
                 [ 00008000 ]  00004000          *   00000800   configuration.obj (RcvR1)

RcvR2        0   [ 00009000 ]  00004800          *   00000800   UNINITIALIZED
                 [ 00009000 ]  00004800          *   00000800   configuration.obj (RcvR2)

FilterOut 
*            0   [ 0000a000 ]  00005000          *   00000800   UNINITIALIZED
                 [ 0000a000 ]  00005000          *   00000800   configuration.obj (FilterOut)

OverlapL     0   [ 0000b000 ]  00005800          *   000001fe   UNINITIALIZED
                 [ 0000b000 ]  00005800          *   000001fe   configuration.obj (OverlapL)

OverlapR     0   [ 0000b3fc ]  000059fe          *   000001fe   UNINITIALIZED
                 [ 0000b3fc ]  000059fe          *   000001fe   configuration.obj (OverlapR)

XmitL1       0   [ 0000c000 ]  00006000          *   00000404   UNINITIALIZED
                 [ 0000c000 ]  00006000          *   00000404   configuration.obj (XmitL1)

XmitL2       0   [ 0000c808 ]  00006404          *   00000404   UNINITIALIZED
                 [ 0000c808 ]  00006404          *   00000404   configuration.obj (XmitL2)

XmitR1       0   [ 0000e000 ]  00007000          *   00000404   UNINITIALIZED
                 [ 0000e000 ]  00007000          *   00000404   configuration.obj (XmitR1)

XmitR2       0   [ 0000e808 ]  00007404          *   00000404   UNINITIALIZED
                 [ 0000e808 ]  00007404          *   00000404   configuration.obj (XmitR2)

.text        0     00010000  [ 00008000 ] 000075ce          *   
                   00010000  [ 00008000 ] 00001526          *   rts55h.lib : _printfi.obj (.text)
                   00011526  [ 00008a93 ] 00000fe7          *   hwafft.obj (.text)
                   0001250d  [ 00009286+] 0000053a          *   aic3204_init.obj (.text)
                   00012a47  [ 00009523+] 00000538          *   rts55h.lib : trgdrv.obj (.text)
                   00012f7f  [ 000097bf+] 0000052a          *              : memory.obj (.text)
                   000134a9  [ 00009a54+] 00000518          *              : lowlev.obj (.text)
                   000139c1  [ 00009ce0+] 00000493          *   filter_routines.obj (.text)
                   00013e54  [ 00009f2a ] 00000492          *   dma_routines.obj (.text)
                   000142e6  [ 0000a173 ] 00000367          *   rts55h.lib : divd.obj (.text)
                   0001464d  [ 0000a326+] 00000340          *   pll.obj (.text)
                   0001498d  [ 0000a4c6+] 000002ef          *   codec_routines.obj (.text)
                   00014c7c  [ 0000a63e ] 000002ad          *   CSLc55x5h.lib : csl_pll.obj (.text)
                   00014f29  [ 0000a794+] 00000298          *   i2s_register.obj (.text)
                   000151c1  [ 0000a8e0+] 00000281          *   main.obj (.text)
                   00015442  [ 0000aa21 ] 0000026c          *   rts55h.lib : fopen.obj (.text)
                   000156ae  [ 0000ab57 ] 0000025c          *              : llmpy.obj (.text)
                   0001590a  [ 0000ac85 ] 00000257          *              : addd.obj (.text)
                   00015b61  [ 0000adb0+] 00000230          *   MMA8451.obj (.text)
                   00015d91  [ 0000aec8+] 000001ea          *   rts55h.lib : cmpd.obj (.text)
                   00015f7b  [ 0000afbd+] 0000019f          *   ezdsp5535_i2c.obj (.text)
                   0001611a  [ 0000b08d ] 0000018a          *   aic3204.obj (.text)
                   000162a4  [ 0000b152 ] 0000017b          *   rts55h.lib : fputs.obj (.text)
                   0001641f  [ 0000b20f+] 0000016b          *   ezdsp5535_gpio.obj (.text)
                   0001658a  [ 0000b2c5 ] 0000014b          *   rts55h.lib : mpyd.obj (.text)
                   000166d5  [ 0000b36a+] 000000f3          *              : setvbuf.obj (.text)
                   000167c8  [ 0000b3e4 ] 000000dc          *   rtc_routines.obj (.text)
                   000168a4  [ 0000b452 ] 000000da          *   rts55h.lib : _io_perm.obj (.text)
                   0001697e  [ 0000b4bf ] 000000c8          *              : frcmpyd_div.obj (.text)
                   00016a46  [ 0000b523 ] 000000be          *              : trgmsg.obj (.text:CIO_breakpoint)
                   00016b04  [ 0000b582 ] 000000ba          *              : fflush.obj (.text)
                   00016bbe  [ 0000b5df ] 000000a2          *              : fputc.obj (.text)
                   00016c60  [ 0000b630 ] 000000a0          *              : divul.obj (.text)
                   00016d00  [ 0000b680 ] 0000008b          *   55xdsph.lib : fir2.obj (.text)
                   00016d8b  [ 0000b6c5 ] 00000001          *   --HOLE-- [fill = 20]
                   00016d8c  [ 0000b6c6 ] 0000007b          *   vector.obj (.text)
                   00016e07  [ 0000b703+] 00000079          *   rts55h.lib : ltoa.obj (.text)
                   00016e80  [ 0000b740 ] 00000076          *              : fclose.obj (.text)
                   00016ef6  [ 0000b77b ] 00000076          *              : frcmpyd.obj (.text)
                   00016f6c  [ 0000b7b6 ] 00000070          *              : remul.obj (.text)
                   00016fdc  [ 0000b7ee ] 0000006e          *              : fixdli.obj (.text)
                   0001704a  [ 0000b825 ] 0000006b          *              : trgmsg.obj (.text)
                   000170b5  [ 0000b85a+] 00000068          *              : fseek.obj (.text)
                   0001711d  [ 0000b88e+] 00000067          *              : fltlid.obj (.text)
                   00017184  [ 0000b8c2 ] 00000059          *              : atoi.obj (.text)
                   000171dd  [ 0000b8ee+] 00000056          *              : memcpy.obj (.text)
                   00017233  [ 0000b919+] 00000054          *   ezdsp5535.obj (.text)
                   00017287  [ 0000b943+] 00000051          *   i2s_routines.obj (.text)
                   000172d8  [ 0000b96c ] 0000004e          *   rts55h.lib : printf.obj (.text)
                   00017326  [ 0000b993 ] 0000004d          *              : autoinit.obj (.text)
                   00017373  [ 0000b9b9+] 0000004b          *              : remli.obj (.text)
                   000173be  [ 0000b9df ] 00000049          *              : args_main.obj (.text)
                   00017407  [ 0000ba03+] 00000048          *              : divli.obj (.text)
                   0001744f  [ 0000ba27+] 0000003e          *              : exit.obj (.text)
                   0001748d  [ 0000ba46+] 00000034          *              : boot.obj (.text)
                   000174c1  [ 0000ba60+] 0000002a          *              : fixdi.obj (.text)
                   000174eb  [ 0000ba75+] 0000002a          *              : udiv.obj (.text)
                   00017515  [ 0000ba8a+] 00000022          *              : memccpy.obj (.text)
                   00017537  [ 0000ba9b+] 0000001f          *   ezdsp5535_led.obj (.text)
                   00017556  [ 0000baab ] 0000001b          *   rts55h.lib : isinf.obj (.text)
                   00017571  [ 0000bab8+] 00000014          *              : subd.obj (.text)
                   00017585  [ 0000bac2+] 00000013          *              : lmpy.obj (.text)
                   00017598  [ 0000bacc ] 00000012          *              : _lock.obj (.text)
                   000175aa  [ 0000bad5 ] 00000010          *              : negd.obj (.text)
                   000175ba  [ 0000badd ] 0000000a          *              : remove.obj (.text)
                   000175c4  [ 0000bae2 ] 00000007          *              : exit.obj (.text:CIO_breakpoint)
                   000175cb  [ 0000bae5+] 00000002          *              : vectors.obj (.text)
                   000175cd  [ 0000bae6 ] 00000001          *   --HOLE-- [fill = 20]

.bss         0   [ 000175d0 ]  0000bae8          *   00000e12   UNINITIALIZED
                 [ 000175d0 ]  0000bae8          *   000008f6   main.obj (.bss)
                 [ 000187bc ]  0000c3de          *   0000025f   configuration.obj (.bss)
                 [ 00018c7a ]  0000c63d          *   00000001   ezdsp5535_i2c.obj (.bss)
                 [ 00018c7c ]  0000c63e          *   00000119   rts55h.lib : defs.obj (.bss)
                 [ 00018eae ]  0000c757          *   000000d0              : trgdrv.obj (.bss)
                 [ 0001904e ]  0000c827          *   00000001   rtc_routines.obj (.bss)
                 [ 00019050 ]  0000c828          *   00000071   rts55h.lib : lowlev.obj (.bss)
                 [ 00019132 ]  0000c899          *   00000001              : fopen.obj (.bss)
                 [ 00019134 ]  0000c89a          *   00000036   pll.obj (.bss)
                 [ 000191a0 ]  0000c8d0          *   00000016   dma_routines.obj (.bss)
                 [ 000191cc ]  0000c8e6          *   00000007   rts55h.lib : memory.obj (.bss)
                 [ 000191da ]  0000c8ed          *   00000001   --HOLE--
                 [ 000191dc ]  0000c8ee          *   00000004              : _lock.obj (.bss)
                 [ 000191e4 ]  0000c8f2          *   00000004              : exit.obj (.bss)
                 [ 000191ec ]  0000c8f6          *   00000002   aic3204.obj (.bss)
                 [ 000191f0 ]  0000c8f8          *   00000002   filter_routines.obj (.bss)

RcvL1_copy 
*            0   [ 000191f4 ]  0000c8fa          *   00000800   UNINITIALIZED
                 [ 000191f4 ]  0000c8fa          *   00000800   configuration.obj (RcvL1_copy)

RcvL2_copy 
*            0   [ 0001a1f4 ]  0000d0fa          *   00000800   UNINITIALIZED
                 [ 0001a1f4 ]  0000d0fa          *   00000800   configuration.obj (RcvL2_copy)

RcvR1_copy 
*            0   [ 0001b1f4 ]  0000d8fa          *   00000800   UNINITIALIZED
                 [ 0001b1f4 ]  0000d8fa          *   00000800   configuration.obj (RcvR1_copy)

RcvR2_copy 
*            0   [ 0001c1f4 ]  0000e0fa          *   00000800   UNINITIALIZED
                 [ 0001c1f4 ]  0000e0fa          *   00000800   configuration.obj (RcvR2_copy)

.cinit       0   [ 0001d1f4 ]  0000e8fa          *   00000469   
                 [ 0001d1f4 ]  0000e8fa          *   00000286   configuration.obj (.cinit)
                 [ 0001d700 ]  0000eb80          *   00000104   main.obj (.cinit)
                 [ 0001d908 ]  0000ec84          *   00000046   pll.obj (.cinit)
                 [ 0001d994 ]  0000ecca          *   0000002d   rts55h.lib : lowlev.obj (.cinit)
                 [ 0001d9ee ]  0000ecf7          *   0000002a              : defs.obj (.cinit)
                 [ 0001da42 ]  0000ed21          *   00000018   dma_routines.obj (.cinit)
                 [ 0001da72 ]  0000ed39          *   0000000a   rts55h.lib : _lock.obj (.cinit)
                 [ 0001da86 ]  0000ed43          *   0000000a              : exit.obj (.cinit)
                 [ 0001da9a ]  0000ed4d          *   00000005   filter_routines.obj (.cinit)
                 [ 0001daa4 ]  0000ed52          *   00000004   ezdsp5535_i2c.obj (.cinit)
                 [ 0001daac ]  0000ed56          *   00000004   rtc_routines.obj (.cinit)
                 [ 0001dab4 ]  0000ed5a          *   00000004   rts55h.lib : fopen.obj (.cinit)
                 [ 0001dabc ]  0000ed5e          *   00000004              : memory.obj (.cinit)
                 [ 0001dac4 ]  0000ed62          *   00000001   --HOLE-- [fill = 0]


GLOBAL SYMBOLS: SORTED ALPHABETICALLY BY Name 

abs. value/
byte addr   word addr   name
---------   ---------   ----
00000002                $TI_capability$C5500$CallingConvention
00000008                $TI_capability$C5500$MemoryModel
00000001                $TI_capability_requires_rev3
            0000bae8    .bss
00010000                .text
000175c5                C$$EXIT
00016aff                C$$IO$$
00017585                I$$LMPY
000174eb                I$$UDIV
00017500                I$$UMOD
0001498d                _AIC3204_init
0001611a                _AIC3204_rget
00016165                _AIC3204_rset
00013c9d                _COLA_Output
00013d6c                _CPLX_Mul
00013a90                _Clear_COLA_Overlaps
000153e2                _ConfigPort
            0000c827    _Count_RTC
            0000c8e0    _CurrentRxL_DMAChannel
            0000c8e1    _CurrentRxR_DMAChannel
            0000c8e2    _CurrentTxL_DMAChannel
            0000c8e3    _CurrentTxR_DMAChannel
00014131                _DMA_Isr
00013ad7                _FFT_Coeffs
00013ba9                _FFT_Filter
            0000bae8    _FIR_HP_1000Hz
            00005000    _FilterOut
00012f21                _HOSTclock
00012eb6                _HOSTclose
00012e01                _HOSTlseek
00012d60                _HOSTopen
00012cd5                _HOSTread
00012c1c                _HOSTrename
00012bbe                _HOSTtime
00012b52                _HOSTunlink
00012ac7                _HOSTwrite
            0000c8f8    _Hwafft_Func
0001537c                _InitSystem
            0000bb61    _LP
            000009ab    _LP_length
00015b8f                _MMAbegin
00015cc2                _MMAread
            00005800    _OverlapL
            000059fe    _OverlapR
0001534a                _PLL_98MHz
00014e6e                _PLL_bypass
00014cde                _PLL_config
00014e07                _PLL_enable
00014ca6                _PLL_init
00014ebd                _PLL_reset
00000900                _RST
00016822                _RTC_Isr
            00003000    _RcvL1
            0000c8fa    _RcvL1_copy
            00003800    _RcvL2
            0000d0fa    _RcvL2_copy
            00004000    _RcvR1
            0000d8fa    _RcvR1_copy
            00004800    _RcvR2
            0000e0fa    _RcvR2_copy
00001ee8                _Reset
            0000c8e4    _RunFilterForL
            0000c8e5    _RunFilterForR
            0000c8d0    _RxL1_DMA_address
            0000c8d2    _RxL2_DMA_address
            0000c8d4    _RxR1_DMA_address
            0000c8d6    _RxR2_DMA_address
            0000c5dd    _Simulation
            0000c8d8    _TxL1_DMA_address
            0000c8da    _TxL2_DMA_address
            0000c8dc    _TxR1_DMA_address
            0000c8de    _TxR2_DMA_address
            00006000    _XmitL1
            00006404    _XmitL2
            00007000    _XmitR1
            00007404    _XmitR2
000139c1                _Zero_Pad_Inputs
            00000e54    __CIOBUF_
            00000254    __STACK_END
000003e8                __STACK_SIZE
000007d0                __SYSMEM_SIZE
000003e8                __SYSSTACK_SIZE
ffffffff                ___binit__
            0000bae8    ___bss__
ffffffff                ___c_args__
            0000e8fa    ___cinit__
            0000c8fa    ___end__
000175ce                ___etext__
00017556                ___isinf
ffffffff                ___pinit__
00010000                ___text__
0001590a                __addd
000173be                __args_main
00015557                __cleanup
            0000c8f2    __cleanup_ptr
00015f23                __cmpd
            000008aa    __ctypes_
00014308                __divd
00017407                __divli
000158d6                __divlli
000174eb                __divu
00016c60                __divul
000157e2                __divull
00016b04                __doflush
            0000c8f4    __dtors_ptr
00015eef                __eqld
000174c1                __fixdi
00016fdc                __fixdli
0001711d                __fltlid
00016ef6                __frcmpyd
0001697e                __frcmpyd_div
            0000c756    __ft_end
            0000c63e    __ftable
00015ea5                __geqd
00015e5a                __gtrd
00015e0d                __leqd
            0000c8ee    __lock
00015dc5                __lssd
0001658a                __mpyd
00017585                __mpyli
0001572b                __mpylli
000175aa                __negd
00015d91                __neqd
000175a8                __nop
00011308                __printfi
00016921                __rd_ok
000175a0                __register_lock
00017598                __register_unlock
00017373                __remli
000156fc                __remlli
00017500                __remu
00016f6c                __remul
000156ae                __remull
            00000060    __stack
00017571                __subd
            00000a6a    __sys_memory
            00000254    __sysstack
            0000c6b6    __tmpnams
            0000c8f0    __unlock
000168a4                __wrt_ok
000175c4                _abort
            0000bbde    _absolute_value
000138d9                _add_device
000161d3                _aic3204_codec_read
00016219                _aic3204_codec_read_MONO
00016268                _aic3204_codec_write
000161b7                _aic3204_disable
00016187                _aic3204_hardware_init
0001250d                _aic3204_init
00017184                _atoi
00017326                _auto_init
00013dd4                _buff_copy16
00013e0d                _buff_copy32
0001748d                _c_int00
0001345d                _calloc
00013455                _chkheap
            0000bbdc    _clearOverlaps
00013869                _close
000151c1                _codecRead
            0000c3de    _coeffs
            00002000    _coeffs_fft_buf
            00002800    _convolved_buf
            0000c8f6    _counter1
            0000c8f7    _counter2
            00001000    _data_br_buf
00015189                _disable_i2s0
00015197                _disable_i2s1
000151a5                _disable_i2s2
000151b3                _disable_i2s3
            0000bbdd    _dummy1
00014124                _enable_dma_int
00015151                _enable_i2s0
0001515f                _enable_i2s1
0001516d                _enable_i2s2
0001517b                _enable_i2s3
000167c8                _enable_rtc_second_int
0001744f                _exit
0001652b                _ezdsp5535_GPIO_getInput
0001641f                _ezdsp5535_GPIO_init
00016423                _ezdsp5535_GPIO_setDirection
000164ae                _ezdsp5535_GPIO_setOutput
00015f9a                _ezdsp5535_I2C_close
00015f7b                _ezdsp5535_I2C_init
000160a1                _ezdsp5535_I2C_read
00015fa3                _ezdsp5535_I2C_reset
00015fb1                _ezdsp5535_I2C_write
0001602c                _ezdsp5535_I2C_write_SR
0001754b                _ezdsp5535_LED_init
00017541                _ezdsp5535_LED_off
00017537                _ezdsp5535_LED_on
00017279                _ezdsp5535_init
00017233                _ezdsp5535_wait
00017267                _ezdsp5535_waitusec
            0000bbdb    _fBypassOn
            0000bbda    _fFilterOn
00016e80                _fclose
00016b66                _fflush
00013860                _find_registered_device
00016d00                _fir2
00015675                _fopen
00016bbe                _fputc
000162a4                _fputs
00012f7f                _free
000133ee                _free_memory
000155af                _freopen
000170b5                _fseek
00012a47                _getenv
            0000c8a4    _hPll
000122a6                _hwafft_1024pts
00011c1d                _hwafft_128pts
00011629                _hwafft_16pts
00011e2e                _hwafft_256pts
0001177f                _hwafft_32pts
0001202c                _hwafft_512pts
00011a88                _hwafft_64pts
0001153a                _hwafft_8pts
00011526                _hwafft_br
00014f29                _i2s0_read_CR
00014f71                _i2s0_read_INTR
00014f77                _i2s0_read_INT_MASK
00014f83                _i2s0_read_RXL_LSW
00014f8f                _i2s0_read_RXL_MSW
00014f9b                _i2s0_read_RXR_LSW
00014fa7                _i2s0_read_RXR_MSW
00014f35                _i2s0_read_SRGR
00014f41                _i2s0_read_TXL_LSW
00014f4d                _i2s0_read_TXL_MSW
00014f59                _i2s0_read_TXR_LSW
00014f65                _i2s0_read_TXR_MSW
00014f2f                _i2s0_write_CR
00014f7d                _i2s0_write_INT_MASK
00014f89                _i2s0_write_RXL_LSW
00014f95                _i2s0_write_RXL_MSW
00014fa1                _i2s0_write_RXR_LSW
00014fad                _i2s0_write_RXR_MSW
00014f3b                _i2s0_write_SRGR
00014f47                _i2s0_write_TXL_LSW
00014f53                _i2s0_write_TXL_MSW
00014f5f                _i2s0_write_TXR_LSW
00014f6b                _i2s0_write_TXR_MSW
00014fb3                _i2s1_read_CR
00014ffb                _i2s1_read_INTR
00015001                _i2s1_read_INT_MASK
0001500d                _i2s1_read_RXL_LSW
00015019                _i2s1_read_RXL_MSW
00015025                _i2s1_read_RXR_LSW
00015031                _i2s1_read_RXR_MSW
00014fbf                _i2s1_read_SRGR
00014fcb                _i2s1_read_TXL_LSW
00014fd7                _i2s1_read_TXL_MSW
00014fe3                _i2s1_read_TXR_LSW
00014fef                _i2s1_read_TXR_MSW
00014fb9                _i2s1_write_CR
00015007                _i2s1_write_INT_MASK
00015013                _i2s1_write_RXL_LSW
0001501f                _i2s1_write_RXL_MSW
0001502b                _i2s1_write_RXR_LSW
00015037                _i2s1_write_RXR_MSW
00014fc5                _i2s1_write_SRGR
00014fd1                _i2s1_write_TXL_LSW
00014fdd                _i2s1_write_TXL_MSW
00014fe9                _i2s1_write_TXR_LSW
00014ff5                _i2s1_write_TXR_MSW
0001503d                _i2s2_read_CR
00015085                _i2s2_read_INTR
0001508b                _i2s2_read_INT_MASK
00015097                _i2s2_read_RXL_LSW
000150a3                _i2s2_read_RXL_MSW
000150af                _i2s2_read_RXR_LSW
000150bb                _i2s2_read_RXR_MSW
00015049                _i2s2_read_SRGR
00015055                _i2s2_read_TXL_LSW
00015061                _i2s2_read_TXL_MSW
0001506d                _i2s2_read_TXR_LSW
00015079                _i2s2_read_TXR_MSW
00015043                _i2s2_write_CR
00015091                _i2s2_write_INT_MASK
0001509d                _i2s2_write_RXL_LSW
000150a9                _i2s2_write_RXL_MSW
000150b5                _i2s2_write_RXR_LSW
000150c1                _i2s2_write_RXR_MSW
0001504f                _i2s2_write_SRGR
0001505b                _i2s2_write_TXL_LSW
00015067                _i2s2_write_TXL_MSW
00015073                _i2s2_write_TXR_LSW
0001507f                _i2s2_write_TXR_MSW
000150c7                _i2s3_read_CR
0001510f                _i2s3_read_INTR
00015115                _i2s3_read_INT_MASK
00015121                _i2s3_read_RXL_LSW
0001512d                _i2s3_read_RXL_MSW
00015139                _i2s3_read_RXR_LSW
00015145                _i2s3_read_RXR_MSW
000150d3                _i2s3_read_SRGR
000150df                _i2s3_read_TXL_LSW
000150eb                _i2s3_read_TXL_MSW
000150f7                _i2s3_read_TXR_LSW
00015103                _i2s3_read_TXR_MSW
000150cd                _i2s3_write_CR
0001511b                _i2s3_write_INT_MASK
00015127                _i2s3_write_RXL_LSW
00015133                _i2s3_write_RXL_MSW
0001513f                _i2s3_write_RXR_LSW
0001514b                _i2s3_write_RXR_MSW
000150d9                _i2s3_write_SRGR
000150e5                _i2s3_write_TXL_LSW
000150f1                _i2s3_write_TXL_MSW
000150fd                _i2s3_write_TXR_LSW
00015109                _i2s3_write_TXR_MSW
00015b61                _inits
000137fc                _lseek
00016e07                _ltoa
00015205                _main
000130c3                _malloc
00013384                _max_free
00017515                _memccpy
000171dd                _memcpy
00013051                _minit
0001373f                _open
            0000c8ce    _pConfigInfo
            0000c8a0    _pllCfg1
            0000c8c6    _pllCfg_100MHz
            0000c8ca    _pllCfg_120MHz
            0000c8ae    _pllCfg_12MHz
            0000c8b2    _pllCfg_12p288MHz
            0000c8a6    _pllCfg_1MHz
            0000c8aa    _pllCfg_2MHz
            0000c8b6    _pllCfg_40MHz
            0000c8ba    _pllCfg_60MHz
            0000c8be    _pllCfg_75MHz
            0000c8c2    _pllCfg_98MHz
            0000c89a    _pllObj
000146c8                _pll_frequency_setup
000172d8                _printf
00016bbe                _putc
00016c51                _putchar
000163f3                _puts
00013695                _read
0001704a                _readmsg
000131be                _realloc
000175ba                _remove
00013661                _remove_device
0001360a                _rename
00015c4f                _requestFromArduino
000167d4                _reset_RTC
00015c87                _rpmReadI2C
            00001800    _scratch_buf
00013e54                _setDMA_address
00013fb4                _set_dma0_ch0_i2s0_Lout
00013f5c                _set_dma0_ch0_stop
00014010                _set_dma0_ch1_i2s0_Rout
00013f72                _set_dma0_ch1_stop
0001406c                _set_dma0_ch2_i2s0_Lin
00013f88                _set_dma0_ch2_stop
000140c8                _set_dma0_ch3_i2s0_Rin
00013f9e                _set_dma0_ch3_stop
00017287                _set_i2s0_master
000172b8                _set_i2s0_slave
000126eb                _set_sampling_frequency_and_gain
000166d5                _setvbuf
00015425                _turnOffLED
00015408                _turnOnLED
000135d6                _unlink
000134a9                _write
00016a46                _writemsg
ffffffff                binit
            0000e8fa    cinit
            0000c8fa    end
000175ce                etext
ffffffff                pinit
00016d8c                reset_isr


GLOBAL SYMBOLS: SORTED BY Symbol Address 

abs. value/
byte addr   word addr   name
---------   ---------   ----
00000001                $TI_capability_requires_rev3
00000002                $TI_capability$C5500$CallingConvention
00000008                $TI_capability$C5500$MemoryModel
            00000060    __stack
000003e8                __STACK_SIZE
000003e8                __SYSSTACK_SIZE
            00000254    __STACK_END
            00000254    __sysstack
000007d0                __SYSMEM_SIZE
00000900                _RST
            000008aa    __ctypes_
            000009ab    _LP_length
            00000a6a    __sys_memory
            00000e54    __CIOBUF_
00001ee8                _Reset
            00001000    _data_br_buf
            00001800    _scratch_buf
            00002000    _coeffs_fft_buf
            00002800    _convolved_buf
            00003000    _RcvL1
            00003800    _RcvL2
            00004000    _RcvR1
            00004800    _RcvR2
            00005000    _FilterOut
            00005800    _OverlapL
            000059fe    _OverlapR
            00006000    _XmitL1
            00006404    _XmitL2
            00007000    _XmitR1
            00007404    _XmitR2
00010000                .text
00010000                ___text__
00011308                __printfi
00011526                _hwafft_br
0001153a                _hwafft_8pts
00011629                _hwafft_16pts
0001177f                _hwafft_32pts
00011a88                _hwafft_64pts
00011c1d                _hwafft_128pts
00011e2e                _hwafft_256pts
0001202c                _hwafft_512pts
000122a6                _hwafft_1024pts
0001250d                _aic3204_init
000126eb                _set_sampling_frequency_and_gain
00012a47                _getenv
00012ac7                _HOSTwrite
00012b52                _HOSTunlink
00012bbe                _HOSTtime
00012c1c                _HOSTrename
00012cd5                _HOSTread
00012d60                _HOSTopen
00012e01                _HOSTlseek
00012eb6                _HOSTclose
00012f21                _HOSTclock
00012f7f                _free
00013051                _minit
000130c3                _malloc
000131be                _realloc
00013384                _max_free
000133ee                _free_memory
00013455                _chkheap
0001345d                _calloc
000134a9                _write
000135d6                _unlink
0001360a                _rename
00013661                _remove_device
00013695                _read
0001373f                _open
000137fc                _lseek
00013860                _find_registered_device
00013869                _close
000138d9                _add_device
000139c1                _Zero_Pad_Inputs
00013a90                _Clear_COLA_Overlaps
00013ad7                _FFT_Coeffs
00013ba9                _FFT_Filter
00013c9d                _COLA_Output
00013d6c                _CPLX_Mul
00013dd4                _buff_copy16
00013e0d                _buff_copy32
00013e54                _setDMA_address
00013f5c                _set_dma0_ch0_stop
00013f72                _set_dma0_ch1_stop
00013f88                _set_dma0_ch2_stop
00013f9e                _set_dma0_ch3_stop
00013fb4                _set_dma0_ch0_i2s0_Lout
00014010                _set_dma0_ch1_i2s0_Rout
0001406c                _set_dma0_ch2_i2s0_Lin
000140c8                _set_dma0_ch3_i2s0_Rin
00014124                _enable_dma_int
00014131                _DMA_Isr
00014308                __divd
000146c8                _pll_frequency_setup
0001498d                _AIC3204_init
00014ca6                _PLL_init
00014cde                _PLL_config
00014e07                _PLL_enable
00014e6e                _PLL_bypass
00014ebd                _PLL_reset
00014f29                _i2s0_read_CR
00014f2f                _i2s0_write_CR
00014f35                _i2s0_read_SRGR
00014f3b                _i2s0_write_SRGR
00014f41                _i2s0_read_TXL_LSW
00014f47                _i2s0_write_TXL_LSW
00014f4d                _i2s0_read_TXL_MSW
00014f53                _i2s0_write_TXL_MSW
00014f59                _i2s0_read_TXR_LSW
00014f5f                _i2s0_write_TXR_LSW
00014f65                _i2s0_read_TXR_MSW
00014f6b                _i2s0_write_TXR_MSW
00014f71                _i2s0_read_INTR
00014f77                _i2s0_read_INT_MASK
00014f7d                _i2s0_write_INT_MASK
00014f83                _i2s0_read_RXL_LSW
00014f89                _i2s0_write_RXL_LSW
00014f8f                _i2s0_read_RXL_MSW
00014f95                _i2s0_write_RXL_MSW
00014f9b                _i2s0_read_RXR_LSW
00014fa1                _i2s0_write_RXR_LSW
00014fa7                _i2s0_read_RXR_MSW
00014fad                _i2s0_write_RXR_MSW
00014fb3                _i2s1_read_CR
00014fb9                _i2s1_write_CR
00014fbf                _i2s1_read_SRGR
00014fc5                _i2s1_write_SRGR
00014fcb                _i2s1_read_TXL_LSW
00014fd1                _i2s1_write_TXL_LSW
00014fd7                _i2s1_read_TXL_MSW
00014fdd                _i2s1_write_TXL_MSW
00014fe3                _i2s1_read_TXR_LSW
00014fe9                _i2s1_write_TXR_LSW
00014fef                _i2s1_read_TXR_MSW
00014ff5                _i2s1_write_TXR_MSW
00014ffb                _i2s1_read_INTR
00015001                _i2s1_read_INT_MASK
00015007                _i2s1_write_INT_MASK
0001500d                _i2s1_read_RXL_LSW
00015013                _i2s1_write_RXL_LSW
00015019                _i2s1_read_RXL_MSW
0001501f                _i2s1_write_RXL_MSW
00015025                _i2s1_read_RXR_LSW
0001502b                _i2s1_write_RXR_LSW
00015031                _i2s1_read_RXR_MSW
00015037                _i2s1_write_RXR_MSW
0001503d                _i2s2_read_CR
00015043                _i2s2_write_CR
00015049                _i2s2_read_SRGR
0001504f                _i2s2_write_SRGR
00015055                _i2s2_read_TXL_LSW
0001505b                _i2s2_write_TXL_LSW
00015061                _i2s2_read_TXL_MSW
00015067                _i2s2_write_TXL_MSW
0001506d                _i2s2_read_TXR_LSW
00015073                _i2s2_write_TXR_LSW
00015079                _i2s2_read_TXR_MSW
0001507f                _i2s2_write_TXR_MSW
00015085                _i2s2_read_INTR
0001508b                _i2s2_read_INT_MASK
00015091                _i2s2_write_INT_MASK
00015097                _i2s2_read_RXL_LSW
0001509d                _i2s2_write_RXL_LSW
000150a3                _i2s2_read_RXL_MSW
000150a9                _i2s2_write_RXL_MSW
000150af                _i2s2_read_RXR_LSW
000150b5                _i2s2_write_RXR_LSW
000150bb                _i2s2_read_RXR_MSW
000150c1                _i2s2_write_RXR_MSW
000150c7                _i2s3_read_CR
000150cd                _i2s3_write_CR
000150d3                _i2s3_read_SRGR
000150d9                _i2s3_write_SRGR
000150df                _i2s3_read_TXL_LSW
000150e5                _i2s3_write_TXL_LSW
000150eb                _i2s3_read_TXL_MSW
000150f1                _i2s3_write_TXL_MSW
000150f7                _i2s3_read_TXR_LSW
000150fd                _i2s3_write_TXR_LSW
00015103                _i2s3_read_TXR_MSW
00015109                _i2s3_write_TXR_MSW
0001510f                _i2s3_read_INTR
00015115                _i2s3_read_INT_MASK
0001511b                _i2s3_write_INT_MASK
00015121                _i2s3_read_RXL_LSW
00015127                _i2s3_write_RXL_LSW
0001512d                _i2s3_read_RXL_MSW
00015133                _i2s3_write_RXL_MSW
00015139                _i2s3_read_RXR_LSW
0001513f                _i2s3_write_RXR_LSW
00015145                _i2s3_read_RXR_MSW
0001514b                _i2s3_write_RXR_MSW
00015151                _enable_i2s0
0001515f                _enable_i2s1
0001516d                _enable_i2s2
0001517b                _enable_i2s3
00015189                _disable_i2s0
00015197                _disable_i2s1
000151a5                _disable_i2s2
000151b3                _disable_i2s3
000151c1                _codecRead
00015205                _main
0001534a                _PLL_98MHz
0001537c                _InitSystem
000153e2                _ConfigPort
00015408                _turnOnLED
00015425                _turnOffLED
00015557                __cleanup
000155af                _freopen
00015675                _fopen
000156ae                __remull
000156fc                __remlli
0001572b                __mpylli
000157e2                __divull
000158d6                __divlli
0001590a                __addd
00015b61                _inits
00015b8f                _MMAbegin
00015c4f                _requestFromArduino
00015c87                _rpmReadI2C
00015cc2                _MMAread
00015d91                __neqd
00015dc5                __lssd
00015e0d                __leqd
00015e5a                __gtrd
00015ea5                __geqd
00015eef                __eqld
00015f23                __cmpd
00015f7b                _ezdsp5535_I2C_init
00015f9a                _ezdsp5535_I2C_close
00015fa3                _ezdsp5535_I2C_reset
00015fb1                _ezdsp5535_I2C_write
0001602c                _ezdsp5535_I2C_write_SR
000160a1                _ezdsp5535_I2C_read
0001611a                _AIC3204_rget
00016165                _AIC3204_rset
00016187                _aic3204_hardware_init
000161b7                _aic3204_disable
000161d3                _aic3204_codec_read
00016219                _aic3204_codec_read_MONO
00016268                _aic3204_codec_write
000162a4                _fputs
000163f3                _puts
0001641f                _ezdsp5535_GPIO_init
00016423                _ezdsp5535_GPIO_setDirection
000164ae                _ezdsp5535_GPIO_setOutput
0001652b                _ezdsp5535_GPIO_getInput
0001658a                __mpyd
000166d5                _setvbuf
000167c8                _enable_rtc_second_int
000167d4                _reset_RTC
00016822                _RTC_Isr
000168a4                __wrt_ok
00016921                __rd_ok
0001697e                __frcmpyd_div
00016a46                _writemsg
00016aff                C$$IO$$
00016b04                __doflush
00016b66                _fflush
00016bbe                _fputc
00016bbe                _putc
00016c51                _putchar
00016c60                __divul
00016d00                _fir2
00016d8c                reset_isr
00016e07                _ltoa
00016e80                _fclose
00016ef6                __frcmpyd
00016f6c                __remul
00016fdc                __fixdli
0001704a                _readmsg
000170b5                _fseek
0001711d                __fltlid
00017184                _atoi
000171dd                _memcpy
00017233                _ezdsp5535_wait
00017267                _ezdsp5535_waitusec
00017279                _ezdsp5535_init
00017287                _set_i2s0_master
000172b8                _set_i2s0_slave
000172d8                _printf
00017326                _auto_init
00017373                __remli
000173be                __args_main
00017407                __divli
0001744f                _exit
0001748d                _c_int00
000174c1                __fixdi
000174eb                I$$UDIV
000174eb                __divu
00017500                I$$UMOD
00017500                __remu
00017515                _memccpy
00017537                _ezdsp5535_LED_on
00017541                _ezdsp5535_LED_off
0001754b                _ezdsp5535_LED_init
00017556                ___isinf
00017571                __subd
00017585                I$$LMPY
00017585                __mpyli
00017598                __register_unlock
000175a0                __register_lock
000175a8                __nop
000175aa                __negd
000175ba                _remove
000175c4                _abort
000175c5                C$$EXIT
000175ce                ___etext__
000175ce                etext
            0000bae8    .bss
            0000bae8    _FIR_HP_1000Hz
            0000bae8    ___bss__
            0000bb61    _LP
            0000bbda    _fFilterOn
            0000bbdb    _fBypassOn
            0000bbdc    _clearOverlaps
            0000bbdd    _dummy1
            0000bbde    _absolute_value
            0000c3de    _coeffs
            0000c5dd    _Simulation
            0000c63e    __ftable
            0000c6b6    __tmpnams
            0000c756    __ft_end
            0000c827    _Count_RTC
            0000c89a    _pllObj
            0000c8a0    _pllCfg1
            0000c8a4    _hPll
            0000c8a6    _pllCfg_1MHz
            0000c8aa    _pllCfg_2MHz
            0000c8ae    _pllCfg_12MHz
            0000c8b2    _pllCfg_12p288MHz
            0000c8b6    _pllCfg_40MHz
            0000c8ba    _pllCfg_60MHz
            0000c8be    _pllCfg_75MHz
            0000c8c2    _pllCfg_98MHz
            0000c8c6    _pllCfg_100MHz
            0000c8ca    _pllCfg_120MHz
            0000c8ce    _pConfigInfo
            0000c8d0    _RxL1_DMA_address
            0000c8d2    _RxL2_DMA_address
            0000c8d4    _RxR1_DMA_address
            0000c8d6    _RxR2_DMA_address
            0000c8d8    _TxL1_DMA_address
            0000c8da    _TxL2_DMA_address
            0000c8dc    _TxR1_DMA_address
            0000c8de    _TxR2_DMA_address
            0000c8e0    _CurrentRxL_DMAChannel
            0000c8e1    _CurrentRxR_DMAChannel
            0000c8e2    _CurrentTxL_DMAChannel
            0000c8e3    _CurrentTxR_DMAChannel
            0000c8e4    _RunFilterForL
            0000c8e5    _RunFilterForR
            0000c8ee    __lock
            0000c8f0    __unlock
            0000c8f2    __cleanup_ptr
            0000c8f4    __dtors_ptr
            0000c8f6    _counter1
            0000c8f7    _counter2
            0000c8f8    _Hwafft_Func
            0000c8fa    _RcvL1_copy
            0000c8fa    ___end__
            0000c8fa    end
            0000d0fa    _RcvL2_copy
            0000d8fa    _RcvR1_copy
            0000e0fa    _RcvR2_copy
            0000e8fa    ___cinit__
            0000e8fa    cinit
ffffffff                ___binit__
ffffffff                ___c_args__
ffffffff                ___pinit__
ffffffff                binit
ffffffff                pinit

[371 symbols]
