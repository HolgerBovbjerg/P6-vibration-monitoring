******************************************************************************
              TMS320C55x Linker PC v4.3.8                      
******************************************************************************
>> Linked Wed May 13 14:43:31 2020

OUTPUT FILE NAME:   <VC5505_FFT_Filter_Demo.out>
ENTRY POINT SYMBOL: "reset_isr"  address: 000178d8


MEMORY CONFIGURATION

         name            origin    length      used     unused   attr    fill
                        (bytes)   (bytes)    (bytes)   (bytes)
----------------------  --------  ---------  --------  --------  ----  --------
  MMR                   00000000   000000c0  00000000  000000c0  RW  
  DARAM_0               000000c0   00001f40  00001dd0  00000170  RW  
  DARAM_1               00002000   00002000  00002000  00000000  RW  
  DARAM_2               00004000   00002000  00002000  00000000  RW  
  DARAM_3               00006000   00002000  00002000  00000000  RW  
  DARAM_4               00008000   00002000  00002000  00000000  RW  
  DARAM_5               0000a000   00002000  00001fc8  00000038  RW  
  DARAM_6               0000c000   00002000  00001010  00000ff0  RW  
  DARAM_7               0000e000   00002000  00001010  00000ff0  RW  
  SARAM                 00010000   00020000  0000e848  000117b8  RW  
  SARAM_2               00030000   0001c000  00000000  0001c000  RW  
  SARAM_3               0004c000   00001000  00000000  00001000  RWIX
  SARAM_4               0004d000   00001000  00000000  00001000  RWIX
  SARAM_5               0004e000   00001000  00000000  00001000  RW  
  SARAM_6               0004f000   00001000  00000000  00001000  RW  
  EMIF_CS0              00050000   007b0000  00000000  007b0000  RW  
  EMIF_CS2              00800000   00400000  00000000  00400000  RW  
  EMIF_CS3              00c00000   00200000  00000000  00200000  RW  
  EMIF_CS4              00e00000   00100000  00000000  00100000  RW  
  EMIF_CS5              00f00000   000e0000  00000000  000e0000  RW  
  SAROM_0               00fe0000   00008000  00000000  00008000  R  X
  SAROM_1               00fe8000   00008000  00000000  00008000  R  X
  SAROM_2               00ff0000   00008000  00000000  00008000  R  X
  SAROM_3               00ff8000   00007f00  00000000  00007f00  R  X
  VECS                  00ffff00   00000100  00000000  00000100  R  X


SECTION ALLOCATION MAP
(Addresses surrounded by []'s are displayed for convenience only!)

output                                                          attributes/
section   page  orgn(bytes) orgn(words) len(bytes) len(words)   input sections
--------  ----  ----------- ----------- ---------- ----------   --------------
.stack       0   [ 000000c0 ]  00000060          *   000001f4   UNINITIALIZED
                 [ 000000c0 ]  00000060          *   000001f4   --HOLE--

.sysstack 
*            0   [ 000004a8 ]  00000254          *   000001f4   UNINITIALIZED
                 [ 000004a8 ]  00000254          *   000001f4   --HOLE--

vector       0     00000900  [ 00000480 ] 00000100          *   
                   00000900  [ 00000480 ] 00000100          *   vector.obj (vector)

.const       0   [ 00000a00 ]  00000500          *   000008e0   
                 [ 00000a00 ]  00000500          *   00000373   main.obj (.const:.string)
                 [ 000010e6 ]  00000873          *   00000001   --HOLE-- [fill = 0]
                 [ 000010e8 ]  00000874          *   00000236   pll.obj (.const:.string)
                 [ 00001554 ]  00000aaa          *   00000174   aic3204_init.obj (.const:.string)
                 [ 0000183c ]  00000c1e          *   00000101   rts55h.lib : ctype.obj (.const:__ctypes_)
                 [ 00001a3e ]  00000d1f          *   00000001   --HOLE-- [fill = 0]
                 [ 00001a40 ]  00000d20          *   00000055   MMA8451.obj (.const:.string)
                 [ 00001aea ]  00000d75          *   00000001   --HOLE-- [fill = 0]
                 [ 00001aec ]  00000d76          *   00000024   rts55h.lib : _printfi.obj (.const:.string)
                 [ 00001b34 ]  00000d9a          *   0000000c              : _printfi.obj (.const)
                 [ 00001b4c ]  00000da6          *   0000000a              : ldexp.obj (.const)
                 [ 00001b60 ]  00000db0          *   0000000a              : sqrt.obj (.const)
                 [ 00001b74 ]  00000dba          *   00000008              : divd.obj (.const:_initial_approx$1)
                 [ 00001b84 ]  00000dc2          *   00000008              : frexp.obj (.const)
                 [ 00001b94 ]  00000dca          *   00000002              : fputs.obj (.const:.string)
                 [ 00001b98 ]  00000dcc          *   00000002   MMA8451.obj (.const:_$P$T0$1)
                 [ 00001b9c ]  00000dce          *   00000002   MMA8451.obj (.const:_$P$T1$2)
                 [ 00001ba0 ]  00000dd0          *   00000002   MMA8451.obj (.const:_$P$T2$3)
                 [ 00001ba4 ]  00000dd2          *   00000002   MMA8451.obj (.const:_$P$T3$4)
                 [ 00001ba8 ]  00000dd4          *   00000002   MMA8451.obj (.const:_$P$T4$5)
                 [ 00001bac ]  00000dd6          *   00000002   MMA8451.obj (.const:_$P$T5$6)
                 [ 00001bb0 ]  00000dd8          *   00000002   MMA8451.obj (.const:_$P$T6$7)
                 [ 00001bb4 ]  00000dda          *   00000002   main.obj (.const)
                 [ 00001bb8 ]  00000ddc          *   00000002   rts55h.lib : divd.obj (.const)
                 [ 00001bbc ]  00000dde          *   00000002              : fltlid.obj (.const)

.cio         0   [ 00001bc0 ]  00000de0          *   00000120   UNINITIALIZED
                 [ 00001bc0 ]  00000de0          *   00000120   rts55h.lib : trgmsg.obj (.cio)

vectors      0     00001e00  [ 00000f00 ] 00000100          *   NOLOAD SECTION
                   00001e00  [ 00000f00 ] 00000100          *   rts55h.lib : vectors.obj (vectors)

data_br_buf 
*            0   [ 00002000 ]  00001000          *   00000800   UNINITIALIZED
                 [ 00002000 ]  00001000          *   00000800   main.obj (data_br_buf)

scratch_buf 
*            0   [ 00003000 ]  00001800          *   00000800   UNINITIALIZED
                 [ 00003000 ]  00001800          *   00000800   main.obj (scratch_buf)

coeffs_fft_buf 
*            0   [ 00004000 ]  00002000          *   00000800   UNINITIALIZED
                 [ 00004000 ]  00002000          *   00000800   configuration.obj (coeffs_fft_buf)

convolved_buf 
*            0   [ 00005000 ]  00002800          *   00000800   UNINITIALIZED
                 [ 00005000 ]  00002800          *   00000800   configuration.obj (convolved_buf)

RcvL1        0   [ 00006000 ]  00003000          *   00000800   UNINITIALIZED
                 [ 00006000 ]  00003000          *   00000800   configuration.obj (RcvL1)

RcvL2        0   [ 00007000 ]  00003800          *   00000800   UNINITIALIZED
                 [ 00007000 ]  00003800          *   00000800   configuration.obj (RcvL2)

RcvR1        0   [ 00008000 ]  00004000          *   00000800   UNINITIALIZED
                 [ 00008000 ]  00004000          *   00000800   configuration.obj (RcvR1)

RcvR2        0   [ 00009000 ]  00004800          *   00000800   UNINITIALIZED
                 [ 00009000 ]  00004800          *   00000800   configuration.obj (RcvR2)

FilterOut 
*            0   [ 0000a000 ]  00005000          *   00000800   UNINITIALIZED
                 [ 0000a000 ]  00005000          *   00000800   configuration.obj (FilterOut)

OverlapL     0   [ 0000b000 ]  00005800          *   000001fe   UNINITIALIZED
                 [ 0000b000 ]  00005800          *   000001fe   configuration.obj (OverlapL)

OverlapR     0   [ 0000b3fc ]  000059fe          *   000001fe   UNINITIALIZED
                 [ 0000b3fc ]  000059fe          *   000001fe   configuration.obj (OverlapR)

.sysmem      0   [ 0000b7f8 ]  00005bfc          *   000003e8   UNINITIALIZED
                 [ 0000b7f8 ]  00005bfc          *   000003e8   --HOLE--

XmitL1       0   [ 0000c000 ]  00006000          *   00000404   UNINITIALIZED
                 [ 0000c000 ]  00006000          *   00000404   configuration.obj (XmitL1)

XmitL2       0   [ 0000c808 ]  00006404          *   00000404   UNINITIALIZED
                 [ 0000c808 ]  00006404          *   00000404   configuration.obj (XmitL2)

XmitR1       0   [ 0000e000 ]  00007000          *   00000404   UNINITIALIZED
                 [ 0000e000 ]  00007000          *   00000404   configuration.obj (XmitR1)

XmitR2       0   [ 0000e808 ]  00007404          *   00000404   UNINITIALIZED
                 [ 0000e808 ]  00007404          *   00000404   configuration.obj (XmitR2)

.text        0     00010000  [ 00008000 ] 00008156          *   
                   00010000  [ 00008000 ] 00001526          *   rts55h.lib : _printfi.obj (.text)
                   00011526  [ 00008a93 ] 00000fe7          *   hwafft.obj (.text)
                   0001250d  [ 00009286+] 00000afd          *   main.obj (.text)
                   0001300a  [ 00009805 ] 0000053a          *   aic3204_init.obj (.text)
                   00013544  [ 00009aa2 ] 00000538          *   rts55h.lib : trgdrv.obj (.text)
                   00013a7c  [ 00009d3e ] 0000052a          *              : memory.obj (.text)
                   00013fa6  [ 00009fd3 ] 00000518          *              : lowlev.obj (.text)
                   000144be  [ 0000a25f ] 00000493          *   filter_routines.obj (.text)
                   00014951  [ 0000a4a8+] 00000492          *   dma_routines.obj (.text)
                   00014de3  [ 0000a6f1+] 00000367          *   rts55h.lib : divd.obj (.text)
                   0001514a  [ 0000a8a5 ] 00000340          *   pll.obj (.text)
                   0001548a  [ 0000aa45 ] 000002ef          *   codec_routines.obj (.text)
                   00015779  [ 0000abbc+] 000002ad          *   CSLc55x5h.lib : csl_pll.obj (.text)
                   00015a26  [ 0000ad13 ] 00000298          *   i2s_register.obj (.text)
                   00015cbe  [ 0000ae5f ] 0000026c          *   rts55h.lib : fopen.obj (.text)
                   00015f2a  [ 0000af95 ] 0000025c          *              : llmpy.obj (.text)
                   00016186  [ 0000b0c3 ] 00000257          *              : addd.obj (.text)
                   000163dd  [ 0000b1ee+] 00000230          *   MMA8451.obj (.text)
                   0001660d  [ 0000b306+] 000001ea          *   rts55h.lib : cmpd.obj (.text)
                   000167f7  [ 0000b3fb+] 0000019f          *   ezdsp5535_i2c.obj (.text)
                   00016996  [ 0000b4cb ] 0000018a          *   aic3204.obj (.text)
                   00016b20  [ 0000b590 ] 0000017b          *   rts55h.lib : fputs.obj (.text)
                   00016c9b  [ 0000b64d+] 0000016b          *   ezdsp5535_gpio.obj (.text)
                   00016e06  [ 0000b703 ] 0000014b          *   rts55h.lib : mpyd.obj (.text)
                   00016f51  [ 0000b7a8+] 00000118          *              : sqrt.obj (.text)
                   00017069  [ 0000b834+] 000000f3          *              : setvbuf.obj (.text)
                   0001715c  [ 0000b8ae ] 000000ee          *              : ldexp.obj (.text)
                   0001724a  [ 0000b925 ] 000000dc          *   rtc_routines.obj (.text)
                   00017326  [ 0000b993 ] 000000da          *   rts55h.lib : _io_perm.obj (.text)
                   00017400  [ 0000ba00 ] 000000cb          *              : frexp.obj (.text)
                   000174cb  [ 0000ba65+] 000000c8          *              : frcmpyd_div.obj (.text)
                   00017593  [ 0000bac9+] 000000be          *              : trgmsg.obj (.text:CIO_breakpoint)
                   00017651  [ 0000bb28+] 000000ba          *              : fflush.obj (.text)
                   0001770b  [ 0000bb85+] 000000a2          *              : fputc.obj (.text)
                   000177ad  [ 0000bbd6+] 000000a0          *              : divul.obj (.text)
                   0001784d  [ 0000bc26+] 0000008b          *   55xdsph.lib : fir2.obj (.text)
                   000178d8  [ 0000bc6c ] 0000007b          *   vector.obj (.text)
                   00017953  [ 0000bca9+] 00000079          *   rts55h.lib : ltoa.obj (.text)
                   000179cc  [ 0000bce6 ] 00000076          *              : fclose.obj (.text)
                   00017a42  [ 0000bd21 ] 00000076          *              : frcmpyd.obj (.text)
                   00017ab8  [ 0000bd5c ] 00000070          *              : remul.obj (.text)
                   00017b28  [ 0000bd94 ] 0000006e          *              : fixdli.obj (.text)
                   00017b96  [ 0000bdcb ] 0000006b          *              : trgmsg.obj (.text)
                   00017c01  [ 0000be00+] 00000068          *              : fseek.obj (.text)
                   00017c69  [ 0000be34+] 00000067          *              : fltlid.obj (.text)
                   00017cd0  [ 0000be68 ] 00000059          *              : atoi.obj (.text)
                   00017d29  [ 0000be94+] 00000056          *              : memcpy.obj (.text)
                   00017d7f  [ 0000bebf+] 00000054          *   ezdsp5535.obj (.text)
                   00017dd3  [ 0000bee9+] 00000051          *   i2s_routines.obj (.text)
                   00017e24  [ 0000bf12 ] 0000004e          *   rts55h.lib : printf.obj (.text)
                   00017e72  [ 0000bf39 ] 0000004d          *              : autoinit.obj (.text)
                   00017ebf  [ 0000bf5f+] 0000004b          *              : remli.obj (.text)
                   00017f0a  [ 0000bf85 ] 00000049          *              : args_main.obj (.text)
                   00017f53  [ 0000bfa9+] 00000048          *              : divli.obj (.text)
                   00017f9b  [ 0000bfcd+] 0000003e          *              : exit.obj (.text)
                   00017fd9  [ 0000bfec+] 0000003c          *              : idiv.obj (.text)
                   00018015  [ 0000c00a+] 00000034          *              : boot.obj (.text)
                   00018049  [ 0000c024+] 0000002a          *              : fixdi.obj (.text)
                   00018073  [ 0000c039+] 0000002a          *              : udiv.obj (.text)
                   0001809d  [ 0000c04e+] 00000022          *              : memccpy.obj (.text)
                   000180bf  [ 0000c05f+] 0000001f          *   ezdsp5535_led.obj (.text)
                   000180de  [ 0000c06f ] 0000001b          *   rts55h.lib : isinf.obj (.text)
                   000180f9  [ 0000c07c+] 00000014          *              : subd.obj (.text)
                   0001810d  [ 0000c086+] 00000013          *              : lmpy.obj (.text)
                   00018120  [ 0000c090 ] 00000012          *              : _lock.obj (.text)
                   00018132  [ 0000c099 ] 00000010          *              : negd.obj (.text)
                   00018142  [ 0000c0a1 ] 0000000a          *              : remove.obj (.text)
                   0001814c  [ 0000c0a6 ] 00000007          *              : exit.obj (.text:CIO_breakpoint)
                   00018153  [ 0000c0a9+] 00000002          *              : vectors.obj (.text)
                   00018155  [ 0000c0aa ] 00000001          *   --HOLE-- [fill = 20]

.bss         0   [ 00018158 ]  0000c0ac          *   00000e8c   UNINITIALIZED
                 [ 00018158 ]  0000c0ac          *   00000970   main.obj (.bss)
                 [ 00019438 ]  0000ca1c          *   0000025f   configuration.obj (.bss)
                 [ 000198f6 ]  0000cc7b          *   00000001   ezdsp5535_i2c.obj (.bss)
                 [ 000198f8 ]  0000cc7c          *   00000119   rts55h.lib : defs.obj (.bss)
                 [ 00019b2a ]  0000cd95          *   000000d0              : trgdrv.obj (.bss)
                 [ 00019cca ]  0000ce65          *   00000001   rtc_routines.obj (.bss)
                 [ 00019ccc ]  0000ce66          *   00000071   rts55h.lib : lowlev.obj (.bss)
                 [ 00019dae ]  0000ced7          *   00000001              : errno.obj (.bss)
                 [ 00019db0 ]  0000ced8          *   00000036   pll.obj (.bss)
                 [ 00019e1c ]  0000cf0e          *   00000016   dma_routines.obj (.bss)
                 [ 00019e48 ]  0000cf24          *   00000007   rts55h.lib : memory.obj (.bss)
                 [ 00019e56 ]  0000cf2b          *   00000001              : fopen.obj (.bss)
                 [ 00019e58 ]  0000cf2c          *   00000004              : _lock.obj (.bss)
                 [ 00019e60 ]  0000cf30          *   00000004              : exit.obj (.bss)
                 [ 00019e68 ]  0000cf34          *   00000002   aic3204.obj (.bss)
                 [ 00019e6c ]  0000cf36          *   00000002   filter_routines.obj (.bss)

RcvL1_copy 
*            0   [ 00019e70 ]  0000cf38          *   00000800   UNINITIALIZED
                 [ 00019e70 ]  0000cf38          *   00000800   configuration.obj (RcvL1_copy)

RcvL2_copy 
*            0   [ 0001ae70 ]  0000d738          *   00000800   UNINITIALIZED
                 [ 0001ae70 ]  0000d738          *   00000800   configuration.obj (RcvL2_copy)

RcvR1_copy 
*            0   [ 0001be70 ]  0000df38          *   00000800   UNINITIALIZED
                 [ 0001be70 ]  0000df38          *   00000800   configuration.obj (RcvR1_copy)

RcvR2_copy 
*            0   [ 0001ce70 ]  0000e738          *   00000800   UNINITIALIZED
                 [ 0001ce70 ]  0000e738          *   00000800   configuration.obj (RcvR2_copy)

.cinit       0   [ 0001de70 ]  0000ef38          *   000004ed   
                 [ 0001de70 ]  0000ef38          *   00000286   configuration.obj (.cinit)
                 [ 0001e37c ]  0000f1be          *   00000184   main.obj (.cinit)
                 [ 0001e684 ]  0000f342          *   00000046   pll.obj (.cinit)
                 [ 0001e710 ]  0000f388          *   0000002d   rts55h.lib : lowlev.obj (.cinit)
                 [ 0001e76a ]  0000f3b5          *   0000002a              : defs.obj (.cinit)
                 [ 0001e7be ]  0000f3df          *   00000018   dma_routines.obj (.cinit)
                 [ 0001e7ee ]  0000f3f7          *   0000000a   rts55h.lib : _lock.obj (.cinit)
                 [ 0001e802 ]  0000f401          *   0000000a              : exit.obj (.cinit)
                 [ 0001e816 ]  0000f40b          *   00000005   filter_routines.obj (.cinit)
                 [ 0001e820 ]  0000f410          *   00000004   ezdsp5535_i2c.obj (.cinit)
                 [ 0001e828 ]  0000f414          *   00000004   rtc_routines.obj (.cinit)
                 [ 0001e830 ]  0000f418          *   00000004   rts55h.lib : errno.obj (.cinit)
                 [ 0001e838 ]  0000f41c          *   00000004              : fopen.obj (.cinit)
                 [ 0001e840 ]  0000f420          *   00000004              : memory.obj (.cinit)
                 [ 0001e848 ]  0000f424          *   00000001   --HOLE-- [fill = 0]


GLOBAL SYMBOLS: SORTED ALPHABETICALLY BY Name 

abs. value/
byte addr   word addr   name
---------   ---------   ----
00000002                $TI_capability$C5500$CallingConvention
00000008                $TI_capability$C5500$MemoryModel
00000001                $TI_capability_requires_rev3
            0000c0ac    .bss
00010000                .text
0001814d                C$$EXIT
0001764c                C$$IO$$
00017fd9                I$$DIV
0001810d                I$$LMPY
00017ff8                I$$MOD
00018073                I$$UDIV
00018088                I$$UMOD
0001548a                _AIC3204_init
00016996                _AIC3204_rget
000169e1                _AIC3204_rset
0001479a                _COLA_Output
00014869                _CPLX_Mul
0001458d                _Clear_COLA_Overlaps
00012faa                _ConfigPort
            0000ce65    _Count_RTC
            0000cf1e    _CurrentRxL_DMAChannel
            0000cf1f    _CurrentRxR_DMAChannel
            0000cf20    _CurrentTxL_DMAChannel
            0000cf21    _CurrentTxR_DMAChannel
00014c2e                _DMA_Isr
000145d4                _FFT_Coeffs
000146a6                _FFT_Filter
            0000c0ac    _FIR_HP_1000Hz
            00005000    _FilterOut
00013a1e                _HOSTclock
000139b3                _HOSTclose
000138fe                _HOSTlseek
0001385d                _HOSTopen
000137d2                _HOSTread
00013719                _HOSTrename
000136bb                _HOSTtime
0001364f                _HOSTunlink
000135c4                _HOSTwrite
            0000c19e    _HP_coeffs
            00000ddb    _HP_length
            0000cf36    _Hwafft_Func
00012f44                _InitSystem
0001640b                _MMAbegin
0001653e                _MMAread
            00005800    _OverlapL
            000059fe    _OverlapR
00012f12                _PLL_98MHz
0001596b                _PLL_bypass
000157db                _PLL_config
00015904                _PLL_enable
000157a3                _PLL_init
000159ba                _PLL_reset
00012555                _RMS
00000900                _RST
000172a4                _RTC_Isr
            00003000    _RcvL1
            0000cf38    _RcvL1_copy
            00003800    _RcvL2
            0000d738    _RcvL2_copy
            00004000    _RcvR1
            0000df38    _RcvR1_copy
            00004800    _RcvR2
            0000e738    _RcvR2_copy
00001e00                _Reset
            0000cf22    _RunFilterForL
            0000cf23    _RunFilterForR
            0000cf0e    _RxL1_DMA_address
            0000cf10    _RxL2_DMA_address
            0000cf12    _RxR1_DMA_address
            0000cf14    _RxR2_DMA_address
            0000cc1b    _Simulation
            0000cf16    _TxL1_DMA_address
            0000cf18    _TxL2_DMA_address
            0000cf1a    _TxR1_DMA_address
            0000cf1c    _TxR2_DMA_address
            00006000    _XmitL1
            00006404    _XmitL2
            00007000    _XmitR1
            00007404    _XmitR2
000144be                _Zero_Pad_Inputs
            00000de0    __CIOBUF_
            00000254    __STACK_END
000003e8                __STACK_SIZE
000007d0                __SYSMEM_SIZE
000003e8                __SYSSTACK_SIZE
ffffffff                ___binit__
            0000c0ac    ___bss__
ffffffff                ___c_args__
            0000ef38    ___cinit__
            0000cf38    ___end__
00018156                ___etext__
000180de                ___isinf
ffffffff                ___pinit__
00010000                ___text__
00016186                __addd
00017f0a                __args_main
00015dd3                __cleanup
            0000cf30    __cleanup_ptr
0001679f                __cmpd
            00000c1e    __ctypes_
00014e05                __divd
00017fd9                __divi
00017f53                __divli
00016152                __divlli
00018073                __divu
000177ad                __divul
0001605e                __divull
00017651                __doflush
            0000cf32    __dtors_ptr
0001676b                __eqld
00018049                __fixdi
00017b28                __fixdli
00017c69                __fltlid
00017a42                __frcmpyd
000174cb                __frcmpyd_div
            0000cd94    __ft_end
            0000cc7c    __ftable
00016721                __geqd
000166d6                __gtrd
00016689                __leqd
            0000cf2c    __lock
00016641                __lssd
00016e06                __mpyd
0001810d                __mpyli
00015fa7                __mpylli
00018132                __negd
0001660d                __neqd
00018130                __nop
00011308                __printfi
000173a3                __rd_ok
00018128                __register_lock
00018120                __register_unlock
00017ff8                __remi
00017ebf                __remli
00015f78                __remlli
00018088                __remu
00017ab8                __remul
00015f2a                __remull
            00000060    __stack
000180f9                __subd
            00005bfc    __sys_memory
            00000254    __sysstack
            0000ccf4    __tmpnams
            0000cf2e    __unlock
00017326                __wrt_ok
0001814c                _abort
            0000c21c    _absolute_value
000143d6                _add_device
00016a4f                _aic3204_codec_read
00016a95                _aic3204_codec_read_MONO
00016ae4                _aic3204_codec_write
00016a33                _aic3204_disable
00016a03                _aic3204_hardware_init
0001300a                _aic3204_init
00017cd0                _atoi
00017e72                _auto_init
000148d1                _buff_copy16
0001490a                _buff_copy32
00018015                _c_int00
00012806                _calculate_abs
00013f5a                _calloc
00013f52                _chkheap
            0000c219    _clearOverlaps
00014366                _close
000125ba                _codecRead
            0000ca1c    _coeffs
            00002000    _coeffs_fft_buf
            00002800    _convolved_buf
            0000cf34    _counter1
            0000cf35    _counter2
            00001000    _data_br_buf
00015c86                _disable_i2s0
00015c94                _disable_i2s1
00015ca2                _disable_i2s2
00015cb0                _disable_i2s3
            0000c21a    _dummy1
00014c21                _enable_dma_int
00015c4e                _enable_i2s0
00015c5c                _enable_i2s1
00015c6a                _enable_i2s2
00015c78                _enable_i2s3
0001724a                _enable_rtc_second_int
            0000ced7    _errno
            0000c21b    _errorFlag
00017f9b                _exit
00016da7                _ezdsp5535_GPIO_getInput
00016c9b                _ezdsp5535_GPIO_init
00016c9f                _ezdsp5535_GPIO_setDirection
00016d2a                _ezdsp5535_GPIO_setOutput
00016816                _ezdsp5535_I2C_close
000167f7                _ezdsp5535_I2C_init
0001691d                _ezdsp5535_I2C_read
0001681f                _ezdsp5535_I2C_reset
0001682d                _ezdsp5535_I2C_write
000168a8                _ezdsp5535_I2C_write_SR
000180d3                _ezdsp5535_LED_init
000180c9                _ezdsp5535_LED_off
000180bf                _ezdsp5535_LED_on
00017dc5                _ezdsp5535_init
00017d7f                _ezdsp5535_wait
00017db3                _ezdsp5535_waitusec
            0000c218    _fBypassOn
            0000c217    _fFilterOn
000179cc                _fclose
000176b3                _fflush
0001250d                _fft_create_datapoint_array
0001435d                _find_registered_device
0001784d                _fir2
00015ef1                _fopen
0001770b                _fputc
00016b20                _fputs
00013a7c                _free
00013eeb                _free_memory
00015e2b                _freopen
00017400                _frexp
00017c01                _fseek
00013544                _getenv
            0000cee2    _hPll
00012887                _homemadePOW
000122a6                _hwafft_1024pts
00011c1d                _hwafft_128pts
00011629                _hwafft_16pts
00011e2e                _hwafft_256pts
0001177f                _hwafft_32pts
0001202c                _hwafft_512pts
00011a88                _hwafft_64pts
0001153a                _hwafft_8pts
00011526                _hwafft_br
00015a26                _i2s0_read_CR
00015a6e                _i2s0_read_INTR
00015a74                _i2s0_read_INT_MASK
00015a80                _i2s0_read_RXL_LSW
00015a8c                _i2s0_read_RXL_MSW
00015a98                _i2s0_read_RXR_LSW
00015aa4                _i2s0_read_RXR_MSW
00015a32                _i2s0_read_SRGR
00015a3e                _i2s0_read_TXL_LSW
00015a4a                _i2s0_read_TXL_MSW
00015a56                _i2s0_read_TXR_LSW
00015a62                _i2s0_read_TXR_MSW
00015a2c                _i2s0_write_CR
00015a7a                _i2s0_write_INT_MASK
00015a86                _i2s0_write_RXL_LSW
00015a92                _i2s0_write_RXL_MSW
00015a9e                _i2s0_write_RXR_LSW
00015aaa                _i2s0_write_RXR_MSW
00015a38                _i2s0_write_SRGR
00015a44                _i2s0_write_TXL_LSW
00015a50                _i2s0_write_TXL_MSW
00015a5c                _i2s0_write_TXR_LSW
00015a68                _i2s0_write_TXR_MSW
00015ab0                _i2s1_read_CR
00015af8                _i2s1_read_INTR
00015afe                _i2s1_read_INT_MASK
00015b0a                _i2s1_read_RXL_LSW
00015b16                _i2s1_read_RXL_MSW
00015b22                _i2s1_read_RXR_LSW
00015b2e                _i2s1_read_RXR_MSW
00015abc                _i2s1_read_SRGR
00015ac8                _i2s1_read_TXL_LSW
00015ad4                _i2s1_read_TXL_MSW
00015ae0                _i2s1_read_TXR_LSW
00015aec                _i2s1_read_TXR_MSW
00015ab6                _i2s1_write_CR
00015b04                _i2s1_write_INT_MASK
00015b10                _i2s1_write_RXL_LSW
00015b1c                _i2s1_write_RXL_MSW
00015b28                _i2s1_write_RXR_LSW
00015b34                _i2s1_write_RXR_MSW
00015ac2                _i2s1_write_SRGR
00015ace                _i2s1_write_TXL_LSW
00015ada                _i2s1_write_TXL_MSW
00015ae6                _i2s1_write_TXR_LSW
00015af2                _i2s1_write_TXR_MSW
00015b3a                _i2s2_read_CR
00015b82                _i2s2_read_INTR
00015b88                _i2s2_read_INT_MASK
00015b94                _i2s2_read_RXL_LSW
00015ba0                _i2s2_read_RXL_MSW
00015bac                _i2s2_read_RXR_LSW
00015bb8                _i2s2_read_RXR_MSW
00015b46                _i2s2_read_SRGR
00015b52                _i2s2_read_TXL_LSW
00015b5e                _i2s2_read_TXL_MSW
00015b6a                _i2s2_read_TXR_LSW
00015b76                _i2s2_read_TXR_MSW
00015b40                _i2s2_write_CR
00015b8e                _i2s2_write_INT_MASK
00015b9a                _i2s2_write_RXL_LSW
00015ba6                _i2s2_write_RXL_MSW
00015bb2                _i2s2_write_RXR_LSW
00015bbe                _i2s2_write_RXR_MSW
00015b4c                _i2s2_write_SRGR
00015b58                _i2s2_write_TXL_LSW
00015b64                _i2s2_write_TXL_MSW
00015b70                _i2s2_write_TXR_LSW
00015b7c                _i2s2_write_TXR_MSW
00015bc4                _i2s3_read_CR
00015c0c                _i2s3_read_INTR
00015c12                _i2s3_read_INT_MASK
00015c1e                _i2s3_read_RXL_LSW
00015c2a                _i2s3_read_RXL_MSW
00015c36                _i2s3_read_RXR_LSW
00015c42                _i2s3_read_RXR_MSW
00015bd0                _i2s3_read_SRGR
00015bdc                _i2s3_read_TXL_LSW
00015be8                _i2s3_read_TXL_MSW
00015bf4                _i2s3_read_TXR_LSW
00015c00                _i2s3_read_TXR_MSW
00015bca                _i2s3_write_CR
00015c18                _i2s3_write_INT_MASK
00015c24                _i2s3_write_RXL_LSW
00015c30                _i2s3_write_RXL_MSW
00015c3c                _i2s3_write_RXR_LSW
00015c48                _i2s3_write_RXR_MSW
00015bd6                _i2s3_write_SRGR
00015be2                _i2s3_write_TXL_LSW
00015bee                _i2s3_write_TXL_MSW
00015bfa                _i2s3_write_TXR_LSW
00015c06                _i2s3_write_TXR_MSW
000163dd                _inits
0001715c                _ldexp
            0000c125    _lowpass
            00000dda    _lowpass_length
000142f9                _lseek
00017953                _ltoa
00012904                _main
00013bc0                _malloc
00013e81                _max_free
0001809d                _memccpy
00017d29                _memcpy
00013b4e                _minit
0001423c                _open
            0000cf0c    _pConfigInfo
000125fe                _peakDetect
000128c1                _peaksPerRev
            0000cede    _pllCfg1
            0000cf04    _pllCfg_100MHz
            0000cf08    _pllCfg_120MHz
            0000ceec    _pllCfg_12MHz
            0000cef0    _pllCfg_12p288MHz
            0000cee4    _pllCfg_1MHz
            0000cee8    _pllCfg_2MHz
            0000cef4    _pllCfg_40MHz
            0000cef8    _pllCfg_60MHz
            0000cefc    _pllCfg_75MHz
            0000cf00    _pllCfg_98MHz
            0000ced8    _pllObj
000151c5                _pll_frequency_setup
00012684                _printErrorMessages
00017e24                _printf
0001770b                _putc
0001779e                _putchar
00016c6f                _puts
00014192                _read
00017b96                _readmsg
00013cbb                _realloc
00018142                _remove
0001415e                _remove_device
00014107                _rename
000164cb                _requestFromArduino
00017256                _reset_RTC
00016503                _rpmReadI2C
            00001800    _scratch_buf
00014951                _setDMA_address
00014ab1                _set_dma0_ch0_i2s0_Lout
00014a59                _set_dma0_ch0_stop
00014b0d                _set_dma0_ch1_i2s0_Rout
00014a6f                _set_dma0_ch1_stop
00014b69                _set_dma0_ch2_i2s0_Lin
00014a85                _set_dma0_ch2_stop
00014bc5                _set_dma0_ch3_i2s0_Rin
00014a9b                _set_dma0_ch3_stop
00017dd3                _set_i2s0_master
00017e04                _set_i2s0_slave
000131e8                _set_sampling_frequency_and_gain
00017069                _setvbuf
00016f51                _sqrt
00012fed                _turnOffLED
00012fd0                _turnOnLED
000140d3                _unlink
00013fa6                _write
00017593                _writemsg
ffffffff                binit
            0000ef38    cinit
            0000cf38    end
00018156                etext
ffffffff                pinit
000178d8                reset_isr


GLOBAL SYMBOLS: SORTED BY Symbol Address 

abs. value/
byte addr   word addr   name
---------   ---------   ----
00000001                $TI_capability_requires_rev3
00000002                $TI_capability$C5500$CallingConvention
00000008                $TI_capability$C5500$MemoryModel
            00000060    __stack
000003e8                __STACK_SIZE
000003e8                __SYSSTACK_SIZE
            00000254    __STACK_END
            00000254    __sysstack
000007d0                __SYSMEM_SIZE
00000900                _RST
            00000c1e    __ctypes_
            00000dda    _lowpass_length
            00000ddb    _HP_length
            00000de0    __CIOBUF_
00001e00                _Reset
            00001000    _data_br_buf
            00001800    _scratch_buf
            00002000    _coeffs_fft_buf
            00002800    _convolved_buf
            00003000    _RcvL1
            00003800    _RcvL2
            00004000    _RcvR1
            00004800    _RcvR2
            00005000    _FilterOut
            00005800    _OverlapL
            000059fe    _OverlapR
            00005bfc    __sys_memory
            00006000    _XmitL1
            00006404    _XmitL2
            00007000    _XmitR1
            00007404    _XmitR2
00010000                .text
00010000                ___text__
00011308                __printfi
00011526                _hwafft_br
0001153a                _hwafft_8pts
00011629                _hwafft_16pts
0001177f                _hwafft_32pts
00011a88                _hwafft_64pts
00011c1d                _hwafft_128pts
00011e2e                _hwafft_256pts
0001202c                _hwafft_512pts
000122a6                _hwafft_1024pts
0001250d                _fft_create_datapoint_array
00012555                _RMS
000125ba                _codecRead
000125fe                _peakDetect
00012684                _printErrorMessages
00012806                _calculate_abs
00012887                _homemadePOW
000128c1                _peaksPerRev
00012904                _main
00012f12                _PLL_98MHz
00012f44                _InitSystem
00012faa                _ConfigPort
00012fd0                _turnOnLED
00012fed                _turnOffLED
0001300a                _aic3204_init
000131e8                _set_sampling_frequency_and_gain
00013544                _getenv
000135c4                _HOSTwrite
0001364f                _HOSTunlink
000136bb                _HOSTtime
00013719                _HOSTrename
000137d2                _HOSTread
0001385d                _HOSTopen
000138fe                _HOSTlseek
000139b3                _HOSTclose
00013a1e                _HOSTclock
00013a7c                _free
00013b4e                _minit
00013bc0                _malloc
00013cbb                _realloc
00013e81                _max_free
00013eeb                _free_memory
00013f52                _chkheap
00013f5a                _calloc
00013fa6                _write
000140d3                _unlink
00014107                _rename
0001415e                _remove_device
00014192                _read
0001423c                _open
000142f9                _lseek
0001435d                _find_registered_device
00014366                _close
000143d6                _add_device
000144be                _Zero_Pad_Inputs
0001458d                _Clear_COLA_Overlaps
000145d4                _FFT_Coeffs
000146a6                _FFT_Filter
0001479a                _COLA_Output
00014869                _CPLX_Mul
000148d1                _buff_copy16
0001490a                _buff_copy32
00014951                _setDMA_address
00014a59                _set_dma0_ch0_stop
00014a6f                _set_dma0_ch1_stop
00014a85                _set_dma0_ch2_stop
00014a9b                _set_dma0_ch3_stop
00014ab1                _set_dma0_ch0_i2s0_Lout
00014b0d                _set_dma0_ch1_i2s0_Rout
00014b69                _set_dma0_ch2_i2s0_Lin
00014bc5                _set_dma0_ch3_i2s0_Rin
00014c21                _enable_dma_int
00014c2e                _DMA_Isr
00014e05                __divd
000151c5                _pll_frequency_setup
0001548a                _AIC3204_init
000157a3                _PLL_init
000157db                _PLL_config
00015904                _PLL_enable
0001596b                _PLL_bypass
000159ba                _PLL_reset
00015a26                _i2s0_read_CR
00015a2c                _i2s0_write_CR
00015a32                _i2s0_read_SRGR
00015a38                _i2s0_write_SRGR
00015a3e                _i2s0_read_TXL_LSW
00015a44                _i2s0_write_TXL_LSW
00015a4a                _i2s0_read_TXL_MSW
00015a50                _i2s0_write_TXL_MSW
00015a56                _i2s0_read_TXR_LSW
00015a5c                _i2s0_write_TXR_LSW
00015a62                _i2s0_read_TXR_MSW
00015a68                _i2s0_write_TXR_MSW
00015a6e                _i2s0_read_INTR
00015a74                _i2s0_read_INT_MASK
00015a7a                _i2s0_write_INT_MASK
00015a80                _i2s0_read_RXL_LSW
00015a86                _i2s0_write_RXL_LSW
00015a8c                _i2s0_read_RXL_MSW
00015a92                _i2s0_write_RXL_MSW
00015a98                _i2s0_read_RXR_LSW
00015a9e                _i2s0_write_RXR_LSW
00015aa4                _i2s0_read_RXR_MSW
00015aaa                _i2s0_write_RXR_MSW
00015ab0                _i2s1_read_CR
00015ab6                _i2s1_write_CR
00015abc                _i2s1_read_SRGR
00015ac2                _i2s1_write_SRGR
00015ac8                _i2s1_read_TXL_LSW
00015ace                _i2s1_write_TXL_LSW
00015ad4                _i2s1_read_TXL_MSW
00015ada                _i2s1_write_TXL_MSW
00015ae0                _i2s1_read_TXR_LSW
00015ae6                _i2s1_write_TXR_LSW
00015aec                _i2s1_read_TXR_MSW
00015af2                _i2s1_write_TXR_MSW
00015af8                _i2s1_read_INTR
00015afe                _i2s1_read_INT_MASK
00015b04                _i2s1_write_INT_MASK
00015b0a                _i2s1_read_RXL_LSW
00015b10                _i2s1_write_RXL_LSW
00015b16                _i2s1_read_RXL_MSW
00015b1c                _i2s1_write_RXL_MSW
00015b22                _i2s1_read_RXR_LSW
00015b28                _i2s1_write_RXR_LSW
00015b2e                _i2s1_read_RXR_MSW
00015b34                _i2s1_write_RXR_MSW
00015b3a                _i2s2_read_CR
00015b40                _i2s2_write_CR
00015b46                _i2s2_read_SRGR
00015b4c                _i2s2_write_SRGR
00015b52                _i2s2_read_TXL_LSW
00015b58                _i2s2_write_TXL_LSW
00015b5e                _i2s2_read_TXL_MSW
00015b64                _i2s2_write_TXL_MSW
00015b6a                _i2s2_read_TXR_LSW
00015b70                _i2s2_write_TXR_LSW
00015b76                _i2s2_read_TXR_MSW
00015b7c                _i2s2_write_TXR_MSW
00015b82                _i2s2_read_INTR
00015b88                _i2s2_read_INT_MASK
00015b8e                _i2s2_write_INT_MASK
00015b94                _i2s2_read_RXL_LSW
00015b9a                _i2s2_write_RXL_LSW
00015ba0                _i2s2_read_RXL_MSW
00015ba6                _i2s2_write_RXL_MSW
00015bac                _i2s2_read_RXR_LSW
00015bb2                _i2s2_write_RXR_LSW
00015bb8                _i2s2_read_RXR_MSW
00015bbe                _i2s2_write_RXR_MSW
00015bc4                _i2s3_read_CR
00015bca                _i2s3_write_CR
00015bd0                _i2s3_read_SRGR
00015bd6                _i2s3_write_SRGR
00015bdc                _i2s3_read_TXL_LSW
00015be2                _i2s3_write_TXL_LSW
00015be8                _i2s3_read_TXL_MSW
00015bee                _i2s3_write_TXL_MSW
00015bf4                _i2s3_read_TXR_LSW
00015bfa                _i2s3_write_TXR_LSW
00015c00                _i2s3_read_TXR_MSW
00015c06                _i2s3_write_TXR_MSW
00015c0c                _i2s3_read_INTR
00015c12                _i2s3_read_INT_MASK
00015c18                _i2s3_write_INT_MASK
00015c1e                _i2s3_read_RXL_LSW
00015c24                _i2s3_write_RXL_LSW
00015c2a                _i2s3_read_RXL_MSW
00015c30                _i2s3_write_RXL_MSW
00015c36                _i2s3_read_RXR_LSW
00015c3c                _i2s3_write_RXR_LSW
00015c42                _i2s3_read_RXR_MSW
00015c48                _i2s3_write_RXR_MSW
00015c4e                _enable_i2s0
00015c5c                _enable_i2s1
00015c6a                _enable_i2s2
00015c78                _enable_i2s3
00015c86                _disable_i2s0
00015c94                _disable_i2s1
00015ca2                _disable_i2s2
00015cb0                _disable_i2s3
00015dd3                __cleanup
00015e2b                _freopen
00015ef1                _fopen
00015f2a                __remull
00015f78                __remlli
00015fa7                __mpylli
0001605e                __divull
00016152                __divlli
00016186                __addd
000163dd                _inits
0001640b                _MMAbegin
000164cb                _requestFromArduino
00016503                _rpmReadI2C
0001653e                _MMAread
0001660d                __neqd
00016641                __lssd
00016689                __leqd
000166d6                __gtrd
00016721                __geqd
0001676b                __eqld
0001679f                __cmpd
000167f7                _ezdsp5535_I2C_init
00016816                _ezdsp5535_I2C_close
0001681f                _ezdsp5535_I2C_reset
0001682d                _ezdsp5535_I2C_write
000168a8                _ezdsp5535_I2C_write_SR
0001691d                _ezdsp5535_I2C_read
00016996                _AIC3204_rget
000169e1                _AIC3204_rset
00016a03                _aic3204_hardware_init
00016a33                _aic3204_disable
00016a4f                _aic3204_codec_read
00016a95                _aic3204_codec_read_MONO
00016ae4                _aic3204_codec_write
00016b20                _fputs
00016c6f                _puts
00016c9b                _ezdsp5535_GPIO_init
00016c9f                _ezdsp5535_GPIO_setDirection
00016d2a                _ezdsp5535_GPIO_setOutput
00016da7                _ezdsp5535_GPIO_getInput
00016e06                __mpyd
00016f51                _sqrt
00017069                _setvbuf
0001715c                _ldexp
0001724a                _enable_rtc_second_int
00017256                _reset_RTC
000172a4                _RTC_Isr
00017326                __wrt_ok
000173a3                __rd_ok
00017400                _frexp
000174cb                __frcmpyd_div
00017593                _writemsg
0001764c                C$$IO$$
00017651                __doflush
000176b3                _fflush
0001770b                _fputc
0001770b                _putc
0001779e                _putchar
000177ad                __divul
0001784d                _fir2
000178d8                reset_isr
00017953                _ltoa
000179cc                _fclose
00017a42                __frcmpyd
00017ab8                __remul
00017b28                __fixdli
00017b96                _readmsg
00017c01                _fseek
00017c69                __fltlid
00017cd0                _atoi
00017d29                _memcpy
00017d7f                _ezdsp5535_wait
00017db3                _ezdsp5535_waitusec
00017dc5                _ezdsp5535_init
00017dd3                _set_i2s0_master
00017e04                _set_i2s0_slave
00017e24                _printf
00017e72                _auto_init
00017ebf                __remli
00017f0a                __args_main
00017f53                __divli
00017f9b                _exit
00017fd9                I$$DIV
00017fd9                __divi
00017ff8                I$$MOD
00017ff8                __remi
00018015                _c_int00
00018049                __fixdi
00018073                I$$UDIV
00018073                __divu
00018088                I$$UMOD
00018088                __remu
0001809d                _memccpy
000180bf                _ezdsp5535_LED_on
000180c9                _ezdsp5535_LED_off
000180d3                _ezdsp5535_LED_init
000180de                ___isinf
000180f9                __subd
0001810d                I$$LMPY
0001810d                __mpyli
00018120                __register_unlock
00018128                __register_lock
00018130                __nop
00018132                __negd
00018142                _remove
0001814c                _abort
0001814d                C$$EXIT
00018156                ___etext__
00018156                etext
            0000c0ac    .bss
            0000c0ac    _FIR_HP_1000Hz
            0000c0ac    ___bss__
            0000c125    _lowpass
            0000c19e    _HP_coeffs
            0000c217    _fFilterOn
            0000c218    _fBypassOn
            0000c219    _clearOverlaps
            0000c21a    _dummy1
            0000c21b    _errorFlag
            0000c21c    _absolute_value
            0000ca1c    _coeffs
            0000cc1b    _Simulation
            0000cc7c    __ftable
            0000ccf4    __tmpnams
            0000cd94    __ft_end
            0000ce65    _Count_RTC
            0000ced7    _errno
            0000ced8    _pllObj
            0000cede    _pllCfg1
            0000cee2    _hPll
            0000cee4    _pllCfg_1MHz
            0000cee8    _pllCfg_2MHz
            0000ceec    _pllCfg_12MHz
            0000cef0    _pllCfg_12p288MHz
            0000cef4    _pllCfg_40MHz
            0000cef8    _pllCfg_60MHz
            0000cefc    _pllCfg_75MHz
            0000cf00    _pllCfg_98MHz
            0000cf04    _pllCfg_100MHz
            0000cf08    _pllCfg_120MHz
            0000cf0c    _pConfigInfo
            0000cf0e    _RxL1_DMA_address
            0000cf10    _RxL2_DMA_address
            0000cf12    _RxR1_DMA_address
            0000cf14    _RxR2_DMA_address
            0000cf16    _TxL1_DMA_address
            0000cf18    _TxL2_DMA_address
            0000cf1a    _TxR1_DMA_address
            0000cf1c    _TxR2_DMA_address
            0000cf1e    _CurrentRxL_DMAChannel
            0000cf1f    _CurrentRxR_DMAChannel
            0000cf20    _CurrentTxL_DMAChannel
            0000cf21    _CurrentTxR_DMAChannel
            0000cf22    _RunFilterForL
            0000cf23    _RunFilterForR
            0000cf2c    __lock
            0000cf2e    __unlock
            0000cf30    __cleanup_ptr
            0000cf32    __dtors_ptr
            0000cf34    _counter1
            0000cf35    _counter2
            0000cf36    _Hwafft_Func
            0000cf38    _RcvL1_copy
            0000cf38    ___end__
            0000cf38    end
            0000d738    _RcvL2_copy
            0000df38    _RcvR1_copy
            0000e738    _RcvR2_copy
            0000ef38    ___cinit__
            0000ef38    cinit
ffffffff                ___binit__
ffffffff                ___c_args__
ffffffff                ___pinit__
ffffffff                binit
ffffffff                pinit

[389 symbols]
